module Examples.AG.PP.HaskellPP.Benchmark where 

import Criterion.Main

import qualified Examples.AG.PP.HaskellPP.LRC.Test as LRC
import qualified Examples.AG.PP.HaskellPP.UU.Test as UU
import qualified Examples.AG.PP.HaskellPP.AG.Test as AG
import qualified Examples.AG.PP.HaskellPP.Memo.Test as Memo

import Language.Haskell.Syntax

i1 = "Examples/Strategies/Inputs/smelly.hs"
i2 = "Examples/Strategies/Inputs/Pandoc/App.hs"
i3 = "Examples/Strategies/Inputs/GHC/Main.hs"

execs = [ 
         ("Small ", i1'),
         ("Pandoc", i2'),
         ("GHC   ", i3')
    
    ]

for a b = concatMap b a 

-- ghc Examples\AG\PP\HaskellPP\Benchmark.hs -main-is Examples.AG.PP.HaskellPP.Benchmark -o Benchmark.exe -no-keep-hi-files -no-keep-o-files

-- if running w/ stack trace 
-- ./bench +RTS -xc -RTS

-- main = AG.parsePrint i2


main :: IO ()
main = defaultMain 
  [ bgroup "Haskell PrettyPrint" $
      for execs $ \(n, i) -> 
        [--  bench ("PrettyPrint LRC      " ++ n) $ whnf (LRC.strModule ) i
      -- ,   bench ("PrettyPrint UU       " ++ n) $ whnf (UU.strModule  ) i
      -- ,   bench ("PrettyPrint AG       " ++ n) $ whnf (AG.strModule  ) i
       bench ("PrettyPrint AG Memo  " ++ n) $ whnf (Memo.strModule) i
      ]
   ] 




i1' = HsModule (SrcLoc {srcFilename = "<unknown>", srcLine = 1, srcColumn = 1}) (Module "Smelly") Nothing [HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 3, srcColumn = 1}, importModule = Module "Sample.Library", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 4, srcColumn = 1}, importModule = Module "Other.Library", importQualified = True, importAs = Just (Module "XD"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 5, srcColumn = 1}, importModule = Module "Data.List", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "intersperse")])}] [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 7, srcColumn = 1}) (HsPVar (HsIdent "main")) (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 8, srcColumn = 7}) (HsPVar (HsIdent "x")) (HsApp (HsVar (UnQual (HsIdent "readFile"))) (HsLit (HsString "Examples/Input/Smelly.hs"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 9, srcColumn = 9}) (HsPVar (HsIdent "y")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "length"))) (HsVar (UnQual (HsIdent "x"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 10, srcColumn = 7}) (HsPVar (HsIdent "z")) (HsVar (UnQual (HsIdent "getLine"))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "x")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "z"))))))])) [],HsDataDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 13, srcColumn = 1}) [] (HsIdent "SampleDataType") [] [HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 13, srcColumn = 23}) (HsIdent "Soup") [HsUnBangedTy (HsTyCon (UnQual (HsIdent "Soup")))],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 13, srcColumn = 35}) (HsIdent "NoSoup") []] [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 15, srcColumn = 1}) [HsIdent "fibonaccis_soup"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Int"))) (HsTyCon (UnQual (HsIdent "Int"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 16, srcColumn = 1}) (HsIdent "fibonaccis_soup") [HsPLit (HsInt 0)] (HsUnGuardedRhs (HsLit (HsInt 1))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 17, srcColumn = 1}) (HsIdent "fibonaccis_soup") [HsPLit (HsInt 1)] (HsUnGuardedRhs (HsLit (HsInt 1))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 18, srcColumn = 1}) (HsIdent "fibonaccis_soup") [HsPVar (HsIdent "n")] (HsUnGuardedRhs (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 18, srcColumn = 25}) (HsPVar (HsIdent "previous")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "fibonaccis_soup"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "n"))) (HsQVarOp (UnQual (HsSymbol "-"))) (HsLit (HsInt 1)))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 19, srcColumn = 25}) (HsPVar (HsIdent "before_p")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "fibonaccis_soup"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "n"))) (HsQVarOp (UnQual (HsSymbol "-"))) (HsLit (HsInt 2)))))) []] (HsInfixApp (HsVar (UnQual (HsIdent "previous"))) (HsQVarOp (UnQual (HsSymbol "+"))) (HsVar (UnQual (HsIdent "before_p")))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 23, srcColumn = 1}) (HsIdent "test") [HsPVar (HsIdent "a")] (HsUnGuardedRhs (HsIf (HsInfixApp (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "a"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsCon (UnQual (HsIdent "True"))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsParen (HsInfixApp (HsList [HsLit (HsInt 2),HsLit (HsInt 3)]) (HsQVarOp (UnQual (HsSymbol "=="))) (HsList [])))) (HsInfixApp (HsList [HsLit (HsInt 1)]) (HsQVarOp (UnQual (HsSymbol "++"))) (HsList [HsLit (HsInt 2),HsLit (HsInt 3)])) (HsInfixApp (HsList [HsLit (HsInt 2)]) (HsQVarOp (UnQual (HsSymbol "++"))) (HsList [HsLit (HsInt 3)])))) []]]
i2' = HsModule (SrcLoc {srcFilename = "<unknown>", srcLine = 16, srcColumn = 1}) (Module "Text.Pandoc.App") (Just [HsEVar (UnQual (HsIdent "convertWithOpts")),HsEThingAll (UnQual (HsIdent "Opt")),HsEThingAll (UnQual (HsIdent "LineEnding")),HsEThingAll (UnQual (HsIdent "Filter")),HsEVar (UnQual (HsIdent "defaultOpts")),HsEVar (UnQual (HsIdent "parseOptions")),HsEVar (UnQual (HsIdent "parseOptionsFromArgs")),HsEVar (UnQual (HsIdent "options")),HsEVar (UnQual (HsIdent "applyFilters"))]) [HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 27, srcColumn = 1}, importModule = Module "Control.Exception", importQualified = True, importAs = Just (Module "E"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 28, srcColumn = 1}, importModule = Module "Control.Monad", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsSymbol ">=>"),HsIVar (HsIdent "when")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 29, srcColumn = 1}, importModule = Module "Control.Monad.Trans", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "MonadIO")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 30, srcColumn = 1}, importModule = Module "Control.Monad.Except", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "throwError")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 31, srcColumn = 1}, importModule = Module "Data.ByteString", importQualified = True, importAs = Just (Module "BS"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 32, srcColumn = 1}, importModule = Module "Data.ByteString.Char8", importQualified = True, importAs = Just (Module "B8"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 33, srcColumn = 1}, importModule = Module "Data.ByteString.Lazy", importQualified = True, importAs = Just (Module "BL"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 34, srcColumn = 1}, importModule = Module "Data.Char", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "toLower")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 35, srcColumn = 1}, importModule = Module "Data.Maybe", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "fromMaybe"),HsIVar (HsIdent "isJust"),HsIVar (HsIdent "isNothing")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 36, srcColumn = 1}, importModule = Module "Data.Set", importQualified = True, importAs = Just (Module "Set"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 37, srcColumn = 1}, importModule = Module "Data.Text", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIAbs (HsIdent "Text")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 38, srcColumn = 1}, importModule = Module "Data.Text", importQualified = True, importAs = Just (Module "T"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 39, srcColumn = 1}, importModule = Module "Data.Text.Lazy", importQualified = True, importAs = Just (Module "TL"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 40, srcColumn = 1}, importModule = Module "Data.Text.Lazy.Encoding", importQualified = True, importAs = Just (Module "TE"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 41, srcColumn = 1}, importModule = Module "Data.Text.Encoding.Error", importQualified = True, importAs = Just (Module "TE"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 42, srcColumn = 1}, importModule = Module "Data.Text.Encoding.Error", importQualified = True, importAs = Just (Module "TSE"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 43, srcColumn = 1}, importModule = Module "Network.URI", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "URI"),HsIVar (HsIdent "parseURI")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 44, srcColumn = 1}, importModule = Module "System.Directory", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "doesDirectoryExist")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 45, srcColumn = 1}, importModule = Module "System.Exit", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "exitSuccess")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 46, srcColumn = 1}, importModule = Module "System.FilePath", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "takeBaseName"),HsIVar (HsIdent "takeExtension")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 47, srcColumn = 1}, importModule = Module "System.IO", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "nativeNewline"),HsIVar (HsIdent "stdout")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 48, srcColumn = 1}, importModule = Module "System.IO", importQualified = True, importAs = Just (Module "IO"), importSpecs = Just (False,[HsIThingAll (HsIdent "Newline")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 49, srcColumn = 1}, importModule = Module "Text.Pandoc", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 50, srcColumn = 1}, importModule = Module "Text.Pandoc.Builder", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "setMeta")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 51, srcColumn = 1}, importModule = Module "Text.Pandoc.MIME", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "getCharset")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 52, srcColumn = 1}, importModule = Module "Text.Pandoc.App.FormatHeuristics", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "formatFromFilePaths")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 53, srcColumn = 1}, importModule = Module "Text.Pandoc.App.Opt", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "Opt"),HsIThingAll (HsIdent "LineEnding"),HsIVar (HsIdent "defaultOpts"),HsIThingAll (HsIdent "IpynbOutput")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 55, srcColumn = 1}, importModule = Module "Text.Pandoc.App.CommandLineOptions", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "parseOptions"),HsIVar (HsIdent "parseOptionsFromArgs"),HsIVar (HsIdent "options")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 57, srcColumn = 1}, importModule = Module "Text.Pandoc.App.OutputSettings", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "OutputSettings"),HsIVar (HsIdent "optToOutputSettings")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 58, srcColumn = 1}, importModule = Module "Text.Collate.Lang", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "Lang"),HsIVar (HsIdent "parseLang")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 59, srcColumn = 1}, importModule = Module "Text.Pandoc.Filter", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingWith (HsIdent "Filter") [HsConName (HsIdent "JSONFilter"),HsConName (HsIdent "LuaFilter")],HsIVar (HsIdent "applyFilters")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 60, srcColumn = 1}, importModule = Module "Text.Pandoc.PDF", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "makePDF")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 61, srcColumn = 1}, importModule = Module "Text.Pandoc.SelfContained", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "makeSelfContained")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 62, srcColumn = 1}, importModule = Module "Text.Pandoc.Shared", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "eastAsianLineBreakFilter"),HsIVar (HsIdent "stripEmptyParagraphs"),HsIVar (HsIdent "headerShift"),HsIVar (HsIdent "isURI"),HsIVar (HsIdent "tabFilter"),HsIVar (HsIdent "uriPathToPath"),HsIVar (HsIdent "filterIpynbOutput"),HsIVar (HsIdent "defaultUserDataDir"),HsIVar (HsIdent "tshow")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 65, srcColumn = 1}, importModule = Module "Text.Pandoc.Writers.Shared", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "lookupMetaString")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 66, srcColumn = 1}, importModule = Module "Text.Pandoc.Readers.Markdown", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "yamlToMeta")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 67, srcColumn = 1}, importModule = Module "Text.Pandoc.UTF8", importQualified = True, importAs = Just (Module "UTF8"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 69, srcColumn = 1}, importModule = Module "System.Posix.IO", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "stdOutput")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 70, srcColumn = 1}, importModule = Module "System.Posix.Terminal", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "queryTerminal")])}] [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 73, srcColumn = 1}) [HsIdent "convertWithOpts"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Opt"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 74, srcColumn = 1}) (HsIdent "convertWithOpts") [HsPVar (HsIdent "opts")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 75, srcColumn = 11}) (HsPVar (HsIdent "datadir")) (HsCase (HsApp (HsVar (UnQual (HsIdent "optDataDir"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 76, srcColumn = 19}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 77, srcColumn = 23}) (HsPVar (HsIdent "d")) (HsVar (UnQual (HsIdent "defaultUserDataDir"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 78, srcColumn = 28}) (HsPVar (HsIdent "exists")) (HsApp (HsVar (UnQual (HsIdent "doesDirectoryExist"))) (HsVar (UnQual (HsIdent "d")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsIf (HsVar (UnQual (HsIdent "exists"))) (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsVar (UnQual (HsIdent "d")))) (HsCon (UnQual (HsIdent "Nothing")))))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 82, srcColumn = 19}) (HsPApp (UnQual (HsIdent "Just")) [HsPWildCard]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "optDataDir"))) (HsVar (UnQual (HsIdent "opts")))))) []]),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 84, srcColumn = 7}) (HsPVar (HsIdent "outputFile")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "fromMaybe"))) (HsLit (HsString "-"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optOutputFile"))) (HsVar (UnQual (HsIdent "opts"))))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 85, srcColumn = 7}) (HsPVar (HsIdent "filters")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "optFilters"))) (HsVar (UnQual (HsIdent "opts"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 86, srcColumn = 7}) (HsPVar (HsIdent "verbosity")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "optVerbosity"))) (HsVar (UnQual (HsIdent "opts"))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optDumpArgs"))) (HsVar (UnQual (HsIdent "opts")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsApp (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stdout")))) (HsParen (HsApp (HsVar (Qual (Module "T") (HsIdent "pack"))) (HsVar (UnQual (HsIdent "outputFile")))))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM_"))) (HsParen (HsInfixApp (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stdout")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "T") (HsIdent "pack")))))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "fromMaybe"))) (HsList [HsLit (HsString "-")])) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "optInputFiles"))) (HsVar (UnQual (HsIdent "opts"))))))),HsQualifier (HsVar (UnQual (HsIdent "exitSuccess")))])),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 94, srcColumn = 7}) (HsPVar (HsIdent "sources")) (HsUnGuardedRhs (HsCase (HsApp (HsVar (UnQual (HsIdent "optInputFiles"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 95, srcColumn = 22}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "xs")]) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 95, srcColumn = 30}) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optIgnoreArgs"))) (HsVar (UnQual (HsIdent "opts")))))) (HsVar (UnQual (HsIdent "xs")))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 96, srcColumn = 22}) HsPWildCard (HsUnGuardedAlt (HsList [HsLit (HsString "-")])) []])) []],HsLetStmt [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 98, srcColumn = 7}) [HsIdent "runIO'"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (UnQual (HsIdent "PandocIO"))) (HsTyVar (HsIdent "a"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyVar (HsIdent "a"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 99, srcColumn = 7}) (HsIdent "runIO'") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 100, srcColumn = 24}) (HsPTuple [HsPVar (HsIdent "res"),HsPVar (HsIdent "reports")]) (HsInfixApp (HsVar (UnQual (HsIdent "runIOorExplode"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsApp (HsVar (UnQual (HsIdent "setTrace"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optTrace"))) (HsVar (UnQual (HsIdent "opts")))))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "setVerbosity"))) (HsVar (UnQual (HsIdent "verbosity")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 103, srcColumn = 32}) (HsPVar (HsIdent "x")) (HsVar (UnQual (HsIdent "f"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 104, srcColumn = 33}) (HsPVar (HsIdent "rs")) (HsVar (UnQual (HsIdent "getLog"))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsTuple [HsVar (UnQual (HsIdent "x")),HsVar (UnQual (HsIdent "rs"))]))])),HsQualifier (HsCase (HsApp (HsVar (UnQual (HsIdent "optLogFile"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 107, srcColumn = 14}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 108, srcColumn = 14}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "logfile")]) (HsUnGuardedAlt (HsApp (HsApp (HsVar (Qual (Module "BL") (HsIdent "writeFile"))) (HsVar (UnQual (HsIdent "logfile")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "encodeLogMessages"))) (HsVar (UnQual (HsIdent "reports"))))))) []]),HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 109, srcColumn = 13}) (HsIdent "isWarning") [HsPVar (HsIdent "msg")] (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "messageVerbosity"))) (HsVar (UnQual (HsIdent "msg")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsCon (UnQual (HsIdent "WARNING"))))) []]],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "optFailIfWarnings"))) (HsVar (UnQual (HsIdent "opts")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "any"))) (HsVar (UnQual (HsIdent "isWarning")))) (HsVar (UnQual (HsIdent "reports"))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "E") (HsIdent "throwIO"))) (HsCon (UnQual (HsIdent "PandocFailOnWarningError"))))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "res"))))])) []]],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 114, srcColumn = 7}) (HsPVar (HsIdent "eol")) (HsUnGuardedRhs (HsCase (HsApp (HsVar (UnQual (HsIdent "optEol"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 115, srcColumn = 18}) (HsPApp (UnQual (HsIdent "CRLF")) []) (HsUnGuardedAlt (HsCon (Qual (Module "IO") (HsIdent "CRLF")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 116, srcColumn = 18}) (HsPApp (UnQual (HsIdent "LF")) []) (HsUnGuardedAlt (HsCon (Qual (Module "IO") (HsIdent "LF")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 117, srcColumn = 18}) (HsPApp (UnQual (HsIdent "Native")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "nativeNewline")))) []])) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 119, srcColumn = 7}) (HsPVar (HsIdent "istty")) (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 121, srcColumn = 9}) (HsPVar (HsIdent "istty")) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "queryTerminal"))) (HsVar (UnQual (HsIdent "stdOutput"))))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "runIO'"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsApp (HsVar (UnQual (HsIdent "setUserDataDir"))) (HsVar (UnQual (HsIdent "datadir")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "setResourcePath"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optResourcePath"))) (HsVar (UnQual (HsIdent "opts")))))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "setInputFiles"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "fromMaybe"))) (HsList [HsLit (HsString "-")])) (HsParen (HsApp (HsVar (UnQual (HsIdent "optInputFiles"))) (HsVar (UnQual (HsIdent "opts")))))))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "setOutputFile"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optOutputFile"))) (HsVar (UnQual (HsIdent "opts")))))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 132, srcColumn = 16}) (HsPVar (HsIdent "readerName")) (HsCase (HsApp (HsVar (UnQual (HsIdent "optFrom"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 133, srcColumn = 24}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "f"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 134, srcColumn = 24}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsCase (HsApp (HsVar (UnQual (HsIdent "formatFromFilePaths"))) (HsVar (UnQual (HsIdent "sources")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 135, srcColumn = 28}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "f'")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "f'"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 136, srcColumn = 28}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 136, srcColumn = 36}) (HsInfixApp (HsVar (UnQual (HsIdent "sources"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsList [HsLit (HsString "-")])) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsLit (HsString "markdown"))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 137, srcColumn = 36}) (HsApp (HsApp (HsVar (UnQual (HsIdent "any"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "isURI"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "T") (HsIdent "pack")))))) (HsVar (UnQual (HsIdent "sources")))) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsLit (HsString "html"))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 138, srcColumn = 36}) (HsVar (UnQual (HsIdent "otherwise"))) (HsDo [HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "report"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsCon (UnQual (HsIdent "CouldNotDeduceFormat"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsInfixApp (HsVar (Qual (Module "T") (HsIdent "pack"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "takeExtension")))))) (HsVar (UnQual (HsIdent "sources")))))) (HsLit (HsString "markdown")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsLit (HsString "markdown")))])]) []])) []]),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 143, srcColumn = 9}) (HsPVar (HsIdent "readerNameBase")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (Qual (Module "T") (HsIdent "takeWhile"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 143, srcColumn = 40}) [HsPVar (HsIdent "c")] (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "c"))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '+'))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsVar (UnQual (HsIdent "c")))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '-')))))) (HsVar (UnQual (HsIdent "readerName"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 144, srcColumn = 9}) (HsPVar (HsIdent "pdfOutput")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "toLower")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "takeExtension"))) (HsVar (UnQual (HsIdent "outputFile")))))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString ".pdf")))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "pdfOutput"))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsVar (UnQual (HsIdent "readerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "latex"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCase (HsApp (HsVar (UnQual (HsIdent "optInputFiles"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 148, srcColumn = 9}) (HsPApp (UnQual (HsIdent "Just")) [HsPParen (HsPInfixApp (HsPVar (HsIdent "inputFile")) (Special HsCons) HsPWildCard)]) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "report"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "UnusualConversion")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (Qual (Module "T") (HsIdent "pack")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "to convert a .tex file to PDF, you get better results by using pdflatex "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString "(or lualatex or xelatex) directly, try `pdflatex "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsVar (UnQual (HsIdent "inputFile")))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString "` instead of `pandoc "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsVar (UnQual (HsIdent "inputFile")))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString " -o "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsVar (UnQual (HsIdent "outputFile")))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString "`.")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 152, srcColumn = 9}) HsPWildCard (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) []])),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 154, srcColumn = 27}) (HsPTuple [HsPVar (HsIdent "reader"),HsPVar (HsIdent "readerExts")]) (HsApp (HsVar (UnQual (HsIdent "getReader"))) (HsVar (UnQual (HsIdent "readerName")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 156, srcColumn = 9}) (HsPVar (HsIdent "convertTabs")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "tabFilter"))) (HsParen (HsIf (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "optPreserveTabs"))) (HsVar (UnQual (HsIdent "opts")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "readerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "t2t"))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "readerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "man"))) (HsLit (HsInt 0)) (HsApp (HsVar (UnQual (HsIdent "optTabStop"))) (HsVar (UnQual (HsIdent "opts")))))))) []],HsLetStmt [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 163, srcColumn = 9}) [HsIdent "readSources"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "FilePath")))) (HsTyApp (HsTyCon (UnQual (HsIdent "PandocIO"))) (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "FilePath")),HsTyCon (UnQual (HsIdent "Text"))]))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 164, srcColumn = 9}) (HsIdent "readSources") [HsPVar (HsIdent "srcs")] (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 165, srcColumn = 18}) [HsPVar (HsIdent "fp")] (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 166, srcColumn = 22}) (HsPVar (HsIdent "t")) (HsApp (HsVar (UnQual (HsIdent "readSource"))) (HsVar (UnQual (HsIdent "fp")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsTuple [HsIf (HsInfixApp (HsVar (UnQual (HsIdent "fp"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "-"))) (HsLit (HsString "")) (HsVar (UnQual (HsIdent "fp"))),HsApp (HsVar (UnQual (HsIdent "convertTabs"))) (HsVar (UnQual (HsIdent "t")))]))])))) (HsVar (UnQual (HsIdent "srcs"))))) []]],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 170, srcColumn = 20}) (HsPVar (HsIdent "outputSettings")) (HsApp (HsVar (UnQual (HsIdent "optToOutputSettings"))) (HsVar (UnQual (HsIdent "opts")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 171, srcColumn = 9}) (HsPVar (HsIdent "format")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputFormat"))) (HsVar (UnQual (HsIdent "outputSettings"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 172, srcColumn = 9}) (HsPVar (HsIdent "writer")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputWriter"))) (HsVar (UnQual (HsIdent "outputSettings"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 173, srcColumn = 9}) (HsPVar (HsIdent "writerName")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputWriterName"))) (HsVar (UnQual (HsIdent "outputSettings"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 174, srcColumn = 9}) (HsPVar (HsIdent "writerNameBase")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (Qual (Module "T") (HsIdent "takeWhile"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 174, srcColumn = 40}) [HsPVar (HsIdent "c")] (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "c"))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '+'))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsVar (UnQual (HsIdent "c")))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '-')))))) (HsVar (UnQual (HsIdent "writerName"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 175, srcColumn = 9}) (HsPVar (HsIdent "writerOptions")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputWriterOptions"))) (HsVar (UnQual (HsIdent "outputSettings"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 177, srcColumn = 9}) (HsPVar (HsIdent "bibOutput")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "writerNameBase"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "bibtex"))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "writerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "biblatex"))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "writerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "csljson")))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 181, srcColumn = 9}) (HsPVar (HsIdent "standalone")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "optStandalone"))) (HsVar (UnQual (HsIdent "opts")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isTextFormat"))) (HsVar (UnQual (HsIdent "format"))))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "pdfOutput")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "bibOutput"))))) []],HsQualifier (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsInfixApp (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "pdfOutput"))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isTextFormat"))) (HsVar (UnQual (HsIdent "format")))))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsVar (UnQual (HsIdent "istty")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isNothing"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optOutputFile"))) (HsVar (UnQual (HsIdent "opts"))))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "throwError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "PandocAppError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "Cannot write "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsVar (UnQual (HsIdent "format")))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString " output to terminal.\n"))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString "Specify an output file using the -o option, or "))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsLit (HsString "use '-o -' to force output to stdout."))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 199, srcColumn = 13}) (HsPVar (HsIdent "abbrevs")) (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (Qual (Module "Set") (HsIdent "fromList"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (UnQual (HsIdent "filter"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "not"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "T") (HsIdent "null"))))))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "T") (HsIdent "lines")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "UTF8") (HsIdent "toText")))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsCase (HsApp (HsVar (UnQual (HsIdent "optAbbreviations"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 201, srcColumn = 21}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "readDataFile"))) (HsLit (HsString "abbreviations")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 202, srcColumn = 21}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "readFileStrict"))) (HsVar (UnQual (HsIdent "f"))))) []])),HsQualifier (HsCase (HsApp (HsApp (HsVar (UnQual (HsIdent "lookupMetaString"))) (HsLit (HsString "lang"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optMetadata"))) (HsVar (UnQual (HsIdent "opts")))))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 205, srcColumn = 12}) (HsPLit (HsString "")) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "setTranslations"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsApp (HsApp (HsCon (UnQual (HsIdent "Lang"))) (HsLit (HsString "en"))) (HsCon (UnQual (HsIdent "Nothing")))) (HsParen (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsLit (HsString "US"))))) (HsList [])) (HsList [])) (HsList [])))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 206, srcColumn = 12}) (HsPVar (HsIdent "l")) (HsUnGuardedAlt (HsCase (HsApp (HsVar (UnQual (HsIdent "parseLang"))) (HsVar (UnQual (HsIdent "l")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 207, srcColumn = 28}) (HsPApp (UnQual (HsIdent "Left")) [HsPWildCard]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "report"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsCon (UnQual (HsIdent "InvalidLang"))) (HsVar (UnQual (HsIdent "l")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 208, srcColumn = 28}) (HsPApp (UnQual (HsIdent "Right")) [HsPVar (HsIdent "l'")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "setTranslations"))) (HsVar (UnQual (HsIdent "l'"))))) []])) []]),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 210, srcColumn = 9}) (HsPVar (HsIdent "readerOpts")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "def"))) [HsFieldUpdate (UnQual (HsIdent "readerStandalone")) (HsVar (UnQual (HsIdent "standalone"))),HsFieldUpdate (UnQual (HsIdent "readerColumns")) (HsApp (HsVar (UnQual (HsIdent "optColumns"))) (HsVar (UnQual (HsIdent "opts")))),HsFieldUpdate (UnQual (HsIdent "readerTabStop")) (HsApp (HsVar (UnQual (HsIdent "optTabStop"))) (HsVar (UnQual (HsIdent "opts")))),HsFieldUpdate (UnQual (HsIdent "readerIndentedCodeClasses")) (HsApp (HsVar (UnQual (HsIdent "optIndentedCodeClasses"))) (HsVar (UnQual (HsIdent "opts")))),HsFieldUpdate (UnQual (HsIdent "readerDefaultImageExtension")) (HsApp (HsVar (UnQual (HsIdent "optDefaultImageExtension"))) (HsVar (UnQual (HsIdent "opts")))),HsFieldUpdate (UnQual (HsIdent "readerTrackChanges")) (HsApp (HsVar (UnQual (HsIdent "optTrackChanges"))) (HsVar (UnQual (HsIdent "opts")))),HsFieldUpdate (UnQual (HsIdent "readerAbbreviations")) (HsVar (UnQual (HsIdent "abbrevs"))),HsFieldUpdate (UnQual (HsIdent "readerExtensions")) (HsVar (UnQual (HsIdent "readerExts"))),HsFieldUpdate (UnQual (HsIdent "readerStripComments")) (HsApp (HsVar (UnQual (HsIdent "optStripComments"))) (HsVar (UnQual (HsIdent "opts"))))])) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 223, srcColumn = 22}) (HsPVar (HsIdent "metadataFromFile")) (HsCase (HsApp (HsVar (UnQual (HsIdent "optMetadataFiles"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 225, srcColumn = 9}) (HsPList []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "mempty"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 226, srcColumn = 9}) (HsPVar (HsIdent "paths")) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "mconcat"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 227, srcColumn = 19}) [HsPVar (HsIdent "path")] (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 227, srcColumn = 34}) (HsPVar (HsIdent "raw")) (HsApp (HsVar (UnQual (HsIdent "readFileLazy"))) (HsVar (UnQual (HsIdent "path")))),HsQualifier (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "yamlToMeta"))) (HsVar (UnQual (HsIdent "readerOpts")))) (HsParen (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsVar (UnQual (HsIdent "path")))))) (HsVar (UnQual (HsIdent "raw"))))])))) (HsVar (UnQual (HsIdent "paths")))))) []]),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 230, srcColumn = 9}) (HsPVar (HsIdent "transforms")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsParen (HsCase (HsApp (HsVar (UnQual (HsIdent "optShiftHeadingLevelBy"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 231, srcColumn = 27}) (HsPLit (HsInt 0)) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "id")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 232, srcColumn = 27}) (HsPVar (HsIdent "x")) (HsUnGuardedAlt (HsLeftSection (HsApp (HsVar (UnQual (HsIdent "headerShift"))) (HsVar (UnQual (HsIdent "x")))) (HsQConOp (Special HsCons)))) []])) (HsQVarOp (UnQual (HsSymbol "."))) (HsParen (HsIf (HsApp (HsVar (UnQual (HsIdent "optStripEmptyParagraphs"))) (HsVar (UnQual (HsIdent "opts")))) (HsLeftSection (HsVar (UnQual (HsIdent "stripEmptyParagraphs"))) (HsQConOp (Special HsCons))) (HsVar (UnQual (HsIdent "id")))))) (HsQVarOp (UnQual (HsSymbol "."))) (HsParen (HsIf (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "extensionEnabled"))) (HsCon (UnQual (HsIdent "Ext_east_asian_line_breaks")))) (HsVar (UnQual (HsIdent "readerExts")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsInfixApp (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "extensionEnabled"))) (HsCon (UnQual (HsIdent "Ext_east_asian_line_breaks")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "writerExtensions"))) (HsVar (UnQual (HsIdent "writerOptions")))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "writerWrapText"))) (HsVar (UnQual (HsIdent "writerOptions"))))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsCon (UnQual (HsIdent "WrapPreserve"))))))) (HsLeftSection (HsVar (UnQual (HsIdent "eastAsianLineBreakFilter"))) (HsQConOp (Special HsCons))) (HsVar (UnQual (HsIdent "id")))))) (HsQVarOp (UnQual (HsSymbol "."))) (HsParen (HsCase (HsApp (HsVar (UnQual (HsIdent "optIpynbOutput"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 244, srcColumn = 24}) HsPWildCard (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 244, srcColumn = 26}) (HsInfixApp (HsVar (UnQual (HsIdent "readerNameBase"))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsString "ipynb"))) (HsVar (UnQual (HsIdent "id")))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 245, srcColumn = 24}) (HsPApp (UnQual (HsIdent "IpynbOutputAll")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "id")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 246, srcColumn = 24}) (HsPApp (UnQual (HsIdent "IpynbOutputNone")) []) (HsUnGuardedAlt (HsLeftSection (HsApp (HsVar (UnQual (HsIdent "filterIpynbOutput"))) (HsCon (UnQual (HsIdent "Nothing")))) (HsQConOp (Special HsCons)))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 247, srcColumn = 24}) (HsPApp (UnQual (HsIdent "IpynbOutputBest")) []) (HsUnGuardedAlt (HsLeftSection (HsApp (HsVar (UnQual (HsIdent "filterIpynbOutput"))) (HsParen (HsInfixApp (HsCon (UnQual (HsIdent "Just"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsIf (HsApp (HsVar (UnQual (HsIdent "htmlFormat"))) (HsVar (UnQual (HsIdent "format")))) (HsApp (HsCon (UnQual (HsIdent "Format"))) (HsLit (HsString "html"))) (HsCase (HsVar (UnQual (HsIdent "format"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 252, srcColumn = 45}) (HsPLit (HsString "latex")) (HsUnGuardedAlt (HsApp (HsCon (UnQual (HsIdent "Format"))) (HsLit (HsString "latex")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 253, srcColumn = 45}) (HsPLit (HsString "beamer")) (HsUnGuardedAlt (HsApp (HsCon (UnQual (HsIdent "Format"))) (HsLit (HsString "latex")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 254, srcColumn = 45}) HsPWildCard (HsUnGuardedAlt (HsApp (HsCon (UnQual (HsIdent "Format"))) (HsVar (UnQual (HsIdent "format"))))) []]))))) (HsQConOp (Special HsCons)))) []]))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsList []))) []],HsLetStmt [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 257, srcColumn = 9}) [HsIdent "sourceToDoc"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "FilePath")))) (HsTyApp (HsTyCon (UnQual (HsIdent "PandocIO"))) (HsTyCon (UnQual (HsIdent "Pandoc")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 258, srcColumn = 9}) (HsIdent "sourceToDoc") [HsPVar (HsIdent "sources'")] (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "reader"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 260, srcColumn = 14}) (HsPApp (UnQual (HsIdent "TextReader")) [HsPVar (HsIdent "r")]) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 261, srcColumn = 16}) (HsInfixApp (HsVar (UnQual (HsIdent "readerNameBase"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "json"))) (HsInfixApp (HsVar (UnQual (HsIdent "mconcat"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "readSource"))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsVar (UnQual (HsIdent "r"))) (HsVar (UnQual (HsIdent "readerOpts"))))))) (HsVar (UnQual (HsIdent "sources'"))))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 263, srcColumn = 16}) (HsApp (HsVar (UnQual (HsIdent "optFileScope"))) (HsVar (UnQual (HsIdent "opts")))) (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 265, srcColumn = 24}) (HsPVar (HsIdent "readSource'")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "fmap"))) (HsVar (UnQual (HsIdent "convertTabs")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "readSource"))))) []] (HsInfixApp (HsVar (UnQual (HsIdent "mconcat"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "readSource'"))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsVar (UnQual (HsIdent "r"))) (HsVar (UnQual (HsIdent "readerOpts"))))))) (HsVar (UnQual (HsIdent "sources'")))))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 267, srcColumn = 16}) (HsVar (UnQual (HsIdent "otherwise"))) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "readSources"))) (HsVar (UnQual (HsIdent "sources'")))) (HsQVarOp (UnQual (HsSymbol ">>="))) (HsApp (HsVar (UnQual (HsIdent "r"))) (HsVar (UnQual (HsIdent "readerOpts")))))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 269, srcColumn = 14}) (HsPApp (UnQual (HsIdent "ByteStringReader")) [HsPVar (HsIdent "r")]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "mconcat"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "readFile'"))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsVar (UnQual (HsIdent "r"))) (HsVar (UnQual (HsIdent "readerOpts"))))))) (HsVar (UnQual (HsIdent "sources'")))))) []])) []]],HsQualifier (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "readerNameBase"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "markdown_github"))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "writerNameBase")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "markdown_github"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "report")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsCon (UnQual (HsIdent "Deprecated"))) (HsLit (HsString "markdown_github"))) (HsLit (HsString "Use gfm instead.")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM_"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "uncurry"))) (HsVar (UnQual (HsIdent "setRequestHeader")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optRequestHeaders"))) (HsVar (UnQual (HsIdent "opts")))))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "setNoCheckCertificate"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optNoCheckCertificate"))) (HsVar (UnQual (HsIdent "opts")))))),HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 281, srcColumn = 9}) (HsIdent "isPandocCiteproc") [HsPParen (HsPApp (UnQual (HsIdent "JSONFilter")) [HsPVar (HsIdent "f")])] (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "takeBaseName"))) (HsVar (UnQual (HsIdent "f")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "pandoc-citeproc")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 282, srcColumn = 9}) (HsIdent "isPandocCiteproc") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []]],HsQualifier (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "any"))) (HsVar (UnQual (HsIdent "isPandocCiteproc")))) (HsVar (UnQual (HsIdent "filters")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "report")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsCon (UnQual (HsIdent "Deprecated"))) (HsLit (HsString "pandoc-citeproc filter"))) (HsLit (HsString "Use --citeproc instead.")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 288, srcColumn = 9}) (HsPVar (HsIdent "cslMetadata")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "maybe"))) (HsVar (UnQual (HsIdent "id")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMeta"))) (HsLit (HsString "csl"))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optCSL"))) (HsVar (UnQual (HsIdent "opts")))))) (HsQVarOp (UnQual (HsSymbol "."))) (HsParen (HsCase (HsApp (HsVar (UnQual (HsIdent "optBibliography"))) (HsVar (UnQual (HsIdent "opts")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 291, srcColumn = 14}) (HsPList []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "id")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 292, srcColumn = 14}) (HsPVar (HsIdent "xs")) (HsUnGuardedAlt (HsApp (HsApp (HsVar (UnQual (HsIdent "setMeta"))) (HsLit (HsString "bibliography"))) (HsVar (UnQual (HsIdent "xs"))))) []]))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "maybe"))) (HsVar (UnQual (HsIdent "id")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMeta"))) (HsLit (HsString "citation-abbreviations"))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optCitationAbbreviations"))) (HsVar (UnQual (HsIdent "opts"))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "mempty"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 296, srcColumn = 9}) (HsPVar (HsIdent "doc")) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "sourceToDoc"))) (HsVar (UnQual (HsIdent "sources")))) (HsQVarOp (UnQual (HsSymbol ">>="))) (HsParen (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsParen (HsIf (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optExtractMedia"))) (HsVar (UnQual (HsIdent "opts")))))) (HsVar (UnQual (HsIdent "fillMediaBag"))) (HsVar (UnQual (HsIdent "return"))))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsVar (UnQual (HsIdent "return")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (UnQual (HsIdent "adjustMetadata"))) (HsLeftSection (HsVar (UnQual (HsIdent "metadataFromFile"))) (HsQVarOp (UnQual (HsSymbol "<>")))))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsVar (UnQual (HsIdent "return")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (UnQual (HsIdent "adjustMetadata"))) (HsRightSection (HsQVarOp (UnQual (HsSymbol "<>"))) (HsApp (HsVar (UnQual (HsIdent "optMetadata"))) (HsVar (UnQual (HsIdent "opts"))))))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsVar (UnQual (HsIdent "return")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (UnQual (HsIdent "adjustMetadata"))) (HsRightSection (HsQVarOp (UnQual (HsSymbol "<>"))) (HsVar (UnQual (HsIdent "cslMetadata")))))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsVar (UnQual (HsIdent "applyTransforms"))) (HsVar (UnQual (HsIdent "transforms"))))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "applyFilters"))) (HsVar (UnQual (HsIdent "readerOpts")))) (HsVar (UnQual (HsIdent "filters")))) (HsList [HsApp (HsVar (Qual (Module "T") (HsIdent "unpack"))) (HsVar (UnQual (HsIdent "format")))]))) (HsQVarOp (UnQual (HsSymbol ">=>"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "maybe"))) (HsVar (UnQual (HsIdent "return")))) (HsVar (UnQual (HsIdent "extractMedia")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optExtractMedia"))) (HsVar (UnQual (HsIdent "opts"))))))))),HsQualifier (HsCase (HsVar (UnQual (HsIdent "writer"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 309, srcColumn = 7}) (HsPApp (UnQual (HsIdent "ByteStringWriter")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "f"))) (HsVar (UnQual (HsIdent "writerOptions")))) (HsVar (UnQual (HsIdent "doc")))) (HsQVarOp (UnQual (HsSymbol ">>="))) (HsApp (HsVar (UnQual (HsIdent "writeFnBinary"))) (HsVar (UnQual (HsIdent "outputFile")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 310, srcColumn = 7}) (HsPApp (UnQual (HsIdent "TextWriter")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsCase (HsApp (HsVar (UnQual (HsIdent "outputPdfProgram"))) (HsVar (UnQual (HsIdent "outputSettings")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 311, srcColumn = 9}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "pdfProg")]) (HsUnGuardedAlt (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 312, srcColumn = 21}) (HsPVar (HsIdent "res")) (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "makePDF"))) (HsVar (UnQual (HsIdent "pdfProg")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "optPdfEngineOpts"))) (HsVar (UnQual (HsIdent "opts")))))) (HsVar (UnQual (HsIdent "f")))) (HsVar (UnQual (HsIdent "writerOptions")))) (HsVar (UnQual (HsIdent "doc")))),HsQualifier (HsCase (HsVar (UnQual (HsIdent "res"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 315, srcColumn = 22}) (HsPApp (UnQual (HsIdent "Right")) [HsPVar (HsIdent "pdf")]) (HsUnGuardedAlt (HsApp (HsApp (HsVar (UnQual (HsIdent "writeFnBinary"))) (HsVar (UnQual (HsIdent "outputFile")))) (HsVar (UnQual (HsIdent "pdf"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 316, srcColumn = 22}) (HsPApp (UnQual (HsIdent "Left")) [HsPVar (HsIdent "err'")]) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwError"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "PandocPDFError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "TL") (HsIdent "toStrict"))) (HsParen (HsApp (HsApp (HsVar (Qual (Module "TE") (HsIdent "decodeUtf8With"))) (HsVar (Qual (Module "TE") (HsIdent "lenientDecode")))) (HsVar (UnQual (HsIdent "err'")))))))) []])])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 319, srcColumn = 9}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsDo [HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 320, srcColumn = 21}) (HsIdent "ensureNl") [HsPVar (HsIdent "t")] (HsGuardedRhss [HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 321, srcColumn = 23}) (HsVar (UnQual (HsIdent "standalone"))) (HsVar (UnQual (HsIdent "t"))),HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 322, srcColumn = 23}) (HsInfixApp (HsInfixApp (HsApp (HsVar (Qual (Module "T") (HsIdent "null"))) (HsVar (UnQual (HsIdent "t")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (Qual (Module "T") (HsIdent "last"))) (HsVar (UnQual (HsIdent "t"))))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '\n'))) (HsInfixApp (HsVar (UnQual (HsIdent "t"))) (HsQVarOp (UnQual (HsSymbol "<>"))) (HsApp (HsVar (Qual (Module "T") (HsIdent "singleton"))) (HsLit (HsChar '\n')))),HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 323, srcColumn = 23}) (HsVar (UnQual (HsIdent "otherwise"))) (HsVar (UnQual (HsIdent "t")))]) []]],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 324, srcColumn = 24}) (HsPVar (HsIdent "output")) (HsInfixApp (HsVar (UnQual (HsIdent "ensureNl"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "f"))) (HsVar (UnQual (HsIdent "writerOptions")))) (HsVar (UnQual (HsIdent "doc"))))),HsQualifier (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "writerFn"))) (HsVar (UnQual (HsIdent "eol")))) (HsVar (UnQual (HsIdent "outputFile")))) (HsQVarOp (UnQual (HsSymbol "=<<"))) (HsIf (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "optSelfContained"))) (HsVar (UnQual (HsIdent "opts")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "htmlFormat"))) (HsVar (UnQual (HsIdent "format"))))) (HsApp (HsVar (UnQual (HsIdent "makeSelfContained"))) (HsVar (UnQual (HsIdent "output")))) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "output"))))))])) []])) []])]))])) []],HsTypeDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 330, srcColumn = 1}) (HsIdent "Transform") [] (HsTyFun (HsTyCon (UnQual (HsIdent "Pandoc"))) (HsTyCon (UnQual (HsIdent "Pandoc")))),HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 332, srcColumn = 1}) [HsIdent "htmlFormat"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Text"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 333, srcColumn = 1}) (HsPVar (HsIdent "htmlFormat")) (HsUnGuardedRhs (HsRightSection (HsQVarOp (UnQual (HsIdent "elem"))) (HsList [HsLit (HsString "html"),HsLit (HsString "html4"),HsLit (HsString "html5"),HsLit (HsString "s5"),HsLit (HsString "slidy"),HsLit (HsString "slideous"),HsLit (HsString "dzslides"),HsLit (HsString "revealjs")]))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 336, srcColumn = 1}) [HsIdent "isTextFormat"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Text"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 337, srcColumn = 1}) (HsIdent "isTextFormat") [HsPVar (HsIdent "s")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "s"))) (HsQVarOp (UnQual (HsIdent "notElem"))) (HsList [HsLit (HsString "odt"),HsLit (HsString "docx"),HsLit (HsString "epub2"),HsLit (HsString "epub3"),HsLit (HsString "epub"),HsLit (HsString "pptx")]))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 339, srcColumn = 1}) [HsIdent "adjustMetadata"] (HsQualType [] (HsTyFun (HsTyFun (HsTyCon (UnQual (HsIdent "Meta"))) (HsTyCon (UnQual (HsIdent "Meta")))) (HsTyFun (HsTyCon (UnQual (HsIdent "Pandoc"))) (HsTyCon (UnQual (HsIdent "Pandoc")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 340, srcColumn = 1}) (HsIdent "adjustMetadata") [HsPVar (HsIdent "f"),HsPParen (HsPApp (UnQual (HsIdent "Pandoc")) [HsPVar (HsIdent "meta"),HsPVar (HsIdent "bs")])] (HsUnGuardedRhs (HsApp (HsApp (HsCon (UnQual (HsIdent "Pandoc"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "f"))) (HsVar (UnQual (HsIdent "meta")))))) (HsVar (UnQual (HsIdent "bs"))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 344, srcColumn = 1}) [HsIdent "applyTransforms"] (HsQualType [(UnQual (HsIdent "Monad"),[HsTyVar (HsIdent "m")])] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "Transform")))) (HsTyFun (HsTyCon (UnQual (HsIdent "Pandoc"))) (HsTyApp (HsTyVar (HsIdent "m")) (HsTyCon (UnQual (HsIdent "Pandoc"))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 345, srcColumn = 1}) (HsIdent "applyTransforms") [HsPVar (HsIdent "transforms"),HsPVar (HsIdent "d")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "foldr"))) (HsVar (UnQual (HsSymbol "$")))) (HsVar (UnQual (HsIdent "d")))) (HsVar (UnQual (HsIdent "transforms")))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 347, srcColumn = 1}) [HsIdent "readSource"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyApp (HsTyCon (UnQual (HsIdent "PandocIO"))) (HsTyCon (UnQual (HsIdent "Text")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 348, srcColumn = 1}) (HsIdent "readSource") [HsPVar (HsIdent "src")] (HsUnGuardedRhs (HsCase (HsApp (HsVar (UnQual (HsIdent "parseURI"))) (HsVar (UnQual (HsIdent "src")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 349, srcColumn = 23}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "u")]) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 349, srcColumn = 30}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "uriScheme"))) (HsVar (UnQual (HsIdent "u")))) (HsQVarOp (UnQual (HsIdent "elem"))) (HsList [HsLit (HsString "http:"),HsLit (HsString "https:")])) (HsApp (HsVar (UnQual (HsIdent "readURI"))) (HsVar (UnQual (HsIdent "src")))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 351, srcColumn = 30}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "uriScheme"))) (HsVar (UnQual (HsIdent "u")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "file:"))) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "readTextFile"))) (HsParen (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "uriPathToPath"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (Qual (Module "T") (HsIdent "pack")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "uriPath"))) (HsVar (UnQual (HsIdent "u"))))))))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 353, srcColumn = 23}) HsPWildCard (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "readTextFile"))) (HsVar (UnQual (HsIdent "src")))))) []])) [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 354, srcColumn = 9}) [HsIdent "readTextFile"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (UnQual (HsIdent "Text")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 355, srcColumn = 9}) (HsIdent "readTextFile") [HsPVar (HsIdent "fp")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 356, srcColumn = 14}) (HsPVar (HsIdent "bs")) (HsIf (HsInfixApp (HsVar (UnQual (HsIdent "src"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsString "-"))) (HsVar (Qual (Module "BS") (HsIdent "getContents"))) (HsApp (HsVar (Qual (Module "BS") (HsIdent "readFile"))) (HsVar (UnQual (HsIdent "fp"))))),HsQualifier (HsApp (HsApp (HsVar (Qual (Module "E") (HsIdent "catch"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$!"))) (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "toText"))) (HsVar (UnQual (HsIdent "bs"))))))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 360, srcColumn = 16}) [HsPVar (HsIdent "e")] (HsInfixApp (HsVar (Qual (Module "E") (HsIdent "throwIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCase (HsVar (UnQual (HsIdent "e"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 361, srcColumn = 26}) (HsPApp (Qual (Module "TSE") (HsIdent "DecodeError")) [HsPWildCard,HsPParen (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "w")])]) (HsUnGuardedAlt (HsCase (HsApp (HsApp (HsVar (Qual (Module "BS") (HsIdent "elemIndex"))) (HsVar (UnQual (HsIdent "w")))) (HsVar (UnQual (HsIdent "bs")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 363, srcColumn = 30}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "offset")]) (HsUnGuardedAlt (HsApp (HsApp (HsApp (HsCon (UnQual (HsIdent "PandocUTF8DecodingError"))) (HsParen (HsApp (HsVar (Qual (Module "T") (HsIdent "pack"))) (HsVar (UnQual (HsIdent "fp")))))) (HsVar (UnQual (HsIdent "offset")))) (HsVar (UnQual (HsIdent "w"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 365, srcColumn = 30}) HsPWildCard (HsUnGuardedAlt (HsApp (HsApp (HsApp (HsCon (UnQual (HsIdent "PandocUTF8DecodingError"))) (HsParen (HsApp (HsVar (Qual (Module "T") (HsIdent "pack"))) (HsVar (UnQual (HsIdent "fp")))))) (HsLit (HsInt 0))) (HsVar (UnQual (HsIdent "w"))))) []])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 366, srcColumn = 26}) HsPWildCard (HsUnGuardedAlt (HsApp (HsCon (UnQual (HsIdent "PandocAppError"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "tshow"))) (HsVar (UnQual (HsIdent "e"))))))) []])))))])) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 368, srcColumn = 1}) [HsIdent "readURI"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyApp (HsTyCon (UnQual (HsIdent "PandocIO"))) (HsTyCon (UnQual (HsIdent "Text")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 369, srcColumn = 1}) (HsIdent "readURI") [HsPVar (HsIdent "src")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 370, srcColumn = 12}) (HsPTuple [HsPVar (HsIdent "bs"),HsPVar (HsIdent "mt")]) (HsApp (HsVar (UnQual (HsIdent "openURL"))) (HsParen (HsApp (HsVar (Qual (Module "T") (HsIdent "pack"))) (HsVar (UnQual (HsIdent "src")))))),HsQualifier (HsCase (HsInfixApp (HsVar (UnQual (HsIdent "mt"))) (HsQVarOp (UnQual (HsSymbol ">>="))) (HsVar (UnQual (HsIdent "getCharset")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 372, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Just")) [HsPLit (HsString "UTF-8")]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "toText"))) (HsVar (UnQual (HsIdent "bs")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 373, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Just")) [HsPLit (HsString "ISO-8859-1")]) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (Qual (Module "T") (HsIdent "pack")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "B8") (HsIdent "unpack"))) (HsVar (UnQual (HsIdent "bs")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 374, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "charset")]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "throwError"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsCon (UnQual (HsIdent "PandocUnsupportedCharsetError"))) (HsVar (UnQual (HsIdent "charset")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 375, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (Qual (Module "E") (HsIdent "catch"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$!"))) (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "toText"))) (HsVar (UnQual (HsIdent "bs"))))))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 377, srcColumn = 37}) [HsPVar (HsIdent "cenas")] (HsCase (HsVar (UnQual (HsIdent "cenas"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 378, srcColumn = 39}) (HsPRec (Qual (Module "TSE") (HsIdent "DecodeError")) []) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (Qual (Module "T") (HsIdent "pack")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "B8") (HsIdent "unpack"))) (HsVar (UnQual (HsIdent "bs")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 380, srcColumn = 39}) (HsPVar (HsIdent "e")) (HsUnGuardedAlt (HsApp (HsVar (Qual (Module "E") (HsIdent "throwIO"))) (HsVar (UnQual (HsIdent "e"))))) []])))))) []])])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 382, srcColumn = 1}) [HsIdent "readFile'"] (HsQualType [(UnQual (HsIdent "MonadIO"),[HsTyVar (HsIdent "m")])] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyApp (HsTyVar (HsIdent "m")) (HsTyCon (Qual (Module "BL") (HsIdent "ByteString")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 383, srcColumn = 1}) (HsIdent "readFile'") [HsPLit (HsString "-")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "liftIO"))) (HsVar (Qual (Module "BL") (HsIdent "getContents"))))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 384, srcColumn = 1}) (HsIdent "readFile'") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "BL") (HsIdent "readFile"))) (HsVar (UnQual (HsIdent "f")))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 386, srcColumn = 1}) [HsIdent "writeFnBinary"] (HsQualType [(UnQual (HsIdent "MonadIO"),[HsTyVar (HsIdent "m")])] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyFun (HsTyCon (Qual (Module "BL") (HsIdent "ByteString"))) (HsTyApp (HsTyVar (HsIdent "m")) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 387, srcColumn = 1}) (HsIdent "writeFnBinary") [HsPLit (HsString "-")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (Qual (Module "BL") (HsIdent "putStr"))))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 388, srcColumn = 1}) (HsIdent "writeFnBinary") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (Qual (Module "BL") (HsIdent "writeFile"))) (HsParen (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "encodePath"))) (HsVar (UnQual (HsIdent "f")))))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 390, srcColumn = 1}) [HsIdent "writerFn"] (HsQualType [(UnQual (HsIdent "MonadIO"),[HsTyVar (HsIdent "m")])] (HsTyFun (HsTyCon (Qual (Module "IO") (HsIdent "Newline"))) (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyFun (HsTyCon (UnQual (HsIdent "Text"))) (HsTyApp (HsTyVar (HsIdent "m")) (HsTyCon (Special HsUnitCon))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 391, srcColumn = 1}) (HsIdent "writerFn") [HsPVar (HsIdent "eol"),HsPLit (HsString "-")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "putStrWith"))) (HsVar (UnQual (HsIdent "eol")))))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 392, srcColumn = 1}) (HsIdent "writerFn") [HsPVar (HsIdent "eol"),HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsApp (HsApp (HsVar (Qual (Module "UTF8") (HsIdent "writeFileWith"))) (HsVar (UnQual (HsIdent "eol")))) (HsVar (UnQual (HsIdent "f")))))) []]]
i3' = HsModule (SrcLoc {srcFilename = "<unknown>", srcLine = 15, srcColumn = 1}) (Module "Main") (Just [HsEVar (UnQual (HsIdent "main"))]) [HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 18, srcColumn = 1}, importModule = Module "GHC", importQualified = True, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 19, srcColumn = 1}, importModule = Module "GHC", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "parseTargetFiles"),HsIAbs (HsIdent "Ghc"),HsIThingAll (HsIdent "GhcMonad"),HsIThingAll (HsIdent "LoadHowMuch")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 22, srcColumn = 1}, importModule = Module "GHC.Driver.Backend", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 23, srcColumn = 1}, importModule = Module "GHC.Driver.CmdLine", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 24, srcColumn = 1}, importModule = Module "GHC.Driver.Env", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 25, srcColumn = 1}, importModule = Module "GHC.Driver.Errors", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 26, srcColumn = 1}, importModule = Module "GHC.Driver.Phases", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 27, srcColumn = 1}, importModule = Module "GHC.Driver.Session", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 28, srcColumn = 1}, importModule = Module "GHC.Driver.Ppr", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 29, srcColumn = 1}, importModule = Module "GHC.Driver.Pipeline", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "oneShot"),HsIVar (HsIdent "compileFile")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 30, srcColumn = 1}, importModule = Module "GHC.Driver.MakeFile", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "doMkDependHS")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 31, srcColumn = 1}, importModule = Module "GHC.Driver.Backpack", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "doBackpack")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 32, srcColumn = 1}, importModule = Module "GHC.Driver.Plugins", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 33, srcColumn = 1}, importModule = Module "GHC.Driver.Config.Logger", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "initLogFlags")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 34, srcColumn = 1}, importModule = Module "GHC.Driver.Config.Diagnostic", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 36, srcColumn = 1}, importModule = Module "GHC.Platform", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 37, srcColumn = 1}, importModule = Module "GHC.Platform.Ways", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 38, srcColumn = 1}, importModule = Module "GHC.Platform.Host", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 40, srcColumn = 1}, importModule = Module "GHCi.UI", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "interactiveUI"),HsIVar (HsIdent "ghciWelcomeMsg"),HsIVar (HsIdent "defaultGhciSettings")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 42, srcColumn = 1}, importModule = Module "GHC.Runtime.Loader", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "loadFrontendPlugin")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 44, srcColumn = 1}, importModule = Module "GHC.Unit.Env", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 45, srcColumn = 1}, importModule = Module "GHC.Unit", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIAbs (HsIdent "UnitId"),HsIVar (HsIdent "homeUnitDepends")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 46, srcColumn = 1}, importModule = Module "GHC.Unit.Home.ModInfo", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "emptyHomePackageTable")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 47, srcColumn = 1}, importModule = Module "GHC.Unit.Module", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIAbs (HsIdent "ModuleName"),HsIVar (HsIdent "mkModuleName")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 48, srcColumn = 1}, importModule = Module "GHC.Unit.Module.ModIface", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 49, srcColumn = 1}, importModule = Module "GHC.Unit.State", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "pprUnits"),HsIVar (HsIdent "pprUnitsSimple")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 50, srcColumn = 1}, importModule = Module "GHC.Unit.Finder", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "findImportedModule"),HsIThingAll (HsIdent "FindResult")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 51, srcColumn = 1}, importModule = Module "GHC.Unit.State", importQualified = True, importAs = Just (Module "State"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 52, srcColumn = 1}, importModule = Module "GHC.Unit.Types", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIThingAll (HsIdent "IsBootInterface")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 54, srcColumn = 1}, importModule = Module "GHC.Types.Basic", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "failed")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 55, srcColumn = 1}, importModule = Module "GHC.Types.SrcLoc", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 56, srcColumn = 1}, importModule = Module "GHC.Types.SourceError", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 57, srcColumn = 1}, importModule = Module "GHC.Types.Unique.Supply", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 58, srcColumn = 1}, importModule = Module "GHC.Types.PkgQual", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 60, srcColumn = 1}, importModule = Module "GHC.Utils.Error", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 61, srcColumn = 1}, importModule = Module "GHC.Utils.Misc", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 62, srcColumn = 1}, importModule = Module "GHC.Utils.Panic", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 63, srcColumn = 1}, importModule = Module "GHC.Utils.Outputable", importQualified = False, importAs = Just (Module "Outputable"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 64, srcColumn = 1}, importModule = Module "GHC.Utils.Monad", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "liftIO"),HsIVar (HsIdent "mapMaybeM")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 65, srcColumn = 1}, importModule = Module "GHC.Utils.Binary", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "openBinMem"),HsIVar (HsIdent "put_")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 66, srcColumn = 1}, importModule = Module "GHC.Utils.Logger", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 68, srcColumn = 1}, importModule = Module "GHC.Settings.Config", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 69, srcColumn = 1}, importModule = Module "GHC.Settings.Constants", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 70, srcColumn = 1}, importModule = Module "GHC.Settings.IO", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 72, srcColumn = 1}, importModule = Module "GHC.HandleEncoding", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 73, srcColumn = 1}, importModule = Module "GHC.Data.FastString", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 74, srcColumn = 1}, importModule = Module "GHC.SysTools.BaseDir", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 76, srcColumn = 1}, importModule = Module "GHC.Iface.Load", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 77, srcColumn = 1}, importModule = Module "GHC.Iface.Recomp.Binary", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "fingerprintBinMem")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 79, srcColumn = 1}, importModule = Module "GHC.Tc.Utils.Monad", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "initIfaceCheck")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 80, srcColumn = 1}, importModule = Module "System.FilePath", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 83, srcColumn = 1}, importModule = Module "System.IO", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 84, srcColumn = 1}, importModule = Module "System.Environment", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 85, srcColumn = 1}, importModule = Module "System.Exit", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 86, srcColumn = 1}, importModule = Module "Control.Monad", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 87, srcColumn = 1}, importModule = Module "Control.Monad.Trans.Class", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 88, srcColumn = 1}, importModule = Module "Control.Monad.Trans.Except", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "throwE"),HsIVar (HsIdent "runExceptT")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 89, srcColumn = 1}, importModule = Module "Data.Char", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 90, srcColumn = 1}, importModule = Module "Data.List", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "isPrefixOf"),HsIVar (HsIdent "partition"),HsIVar (HsIdent "intercalate"),HsIVar (HsSymbol "\\\\")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 91, srcColumn = 1}, importModule = Module "Data.Set", importQualified = True, importAs = Just (Module "Set"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 92, srcColumn = 1}, importModule = Module "Data.Map", importQualified = True, importAs = Just (Module "Map"), importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 93, srcColumn = 1}, importModule = Module "Data.Maybe", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 94, srcColumn = 1}, importModule = Module "Prelude", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 95, srcColumn = 1}, importModule = Module "GHC.ResponseFile", importQualified = False, importAs = Nothing, importSpecs = Just (False,[HsIVar (HsIdent "expandResponse")])},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 96, srcColumn = 1}, importModule = Module "Data.Bifunctor", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 97, srcColumn = 1}, importModule = Module "GHC.Data.Graph.Directed", importQualified = False, importAs = Nothing, importSpecs = Nothing},HsImportDecl {importLoc = SrcLoc {srcFilename = "<unknown>", srcLine = 98, srcColumn = 1}, importModule = Module "Data.List.NonEmpty", importQualified = True, importAs = Just (Module "NE"), importSpecs = Nothing}] [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 112, srcColumn = 1}) [HsIdent "main"] (HsQualType [] (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon)))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 113, srcColumn = 1}) (HsPVar (HsIdent "main")) (HsUnGuardedRhs (HsDo [HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hSetBuffering"))) (HsVar (UnQual (HsIdent "stdout")))) (HsCon (UnQual (HsIdent "LineBuffering")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hSetBuffering"))) (HsVar (UnQual (HsIdent "stderr")))) (HsCon (UnQual (HsIdent "LineBuffering")))),HsQualifier (HsVar (UnQual (HsIdent "configureHandleEncoding"))),HsQualifier (HsInfixApp (HsApp (HsApp (HsVar (Qual (Module "GHC") (HsIdent "defaultErrorHandler"))) (HsVar (UnQual (HsIdent "defaultFatalMessager")))) (HsVar (UnQual (HsIdent "defaultFlushOut")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 120, srcColumn = 11}) (HsPVar (HsIdent "argv0")) (HsVar (UnQual (HsIdent "getArgs"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 122, srcColumn = 9}) (HsPTuple [HsPVar (HsIdent "minusB_args"),HsPVar (HsIdent "argv1")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "partition"))) (HsLeftSection (HsLit (HsString "-B")) (HsQVarOp (UnQual (HsIdent "isPrefixOf"))))) (HsVar (UnQual (HsIdent "argv0"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 123, srcColumn = 9}) (HsPVar (HsIdent "mbMinusB")) (HsGuardedRhss [HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 123, srcColumn = 18}) (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "minusB_args")))) (HsCon (UnQual (HsIdent "Nothing"))),HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 124, srcColumn = 18}) (HsVar (UnQual (HsIdent "otherwise"))) (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "drop"))) (HsLit (HsInt 2))) (HsParen (HsApp (HsVar (UnQual (HsIdent "last"))) (HsVar (UnQual (HsIdent "minusB_args"))))))))]) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 126, srcColumn = 9}) (HsPVar (HsIdent "argv2")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "mkGeneralLocated"))) (HsLit (HsString "on the commandline"))))) (HsVar (UnQual (HsIdent "argv1"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 129, srcColumn = 40}) (HsPTuple [HsPVar (HsIdent "mode"),HsPVar (HsIdent "units"),HsPVar (HsIdent "argv3"),HsPVar (HsIdent "flagWarnings")]) (HsApp (HsVar (UnQual (HsIdent "parseModeFlags"))) (HsVar (UnQual (HsIdent "argv2")))),HsQualifier (HsCase (HsVar (UnQual (HsIdent "mode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 140, srcColumn = 9}) (HsPApp (UnQual (HsIdent "Left")) [HsPVar (HsIdent "preStartupMode")]) (HsUnGuardedAlt (HsDo [HsQualifier (HsCase (HsVar (UnQual (HsIdent "preStartupMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 142, srcColumn = 20}) (HsPApp (UnQual (HsIdent "ShowSupportedExtensions")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "showSupportedExtensions"))) (HsVar (UnQual (HsIdent "mbMinusB"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 143, srcColumn = 20}) (HsPApp (UnQual (HsIdent "ShowVersion")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "showVersion")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 144, srcColumn = 20}) (HsPApp (UnQual (HsIdent "ShowNumVersion")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsVar (UnQual (HsIdent "cProjectVersion"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 145, srcColumn = 20}) (HsPApp (UnQual (HsIdent "ShowOptions")) [HsPVar (HsIdent "isInteractive")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "showOptions"))) (HsVar (UnQual (HsIdent "isInteractive"))))) []])])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 146, srcColumn = 9}) (HsPApp (UnQual (HsIdent "Right")) [HsPVar (HsIdent "postStartupMode")]) (HsUnGuardedAlt (HsInfixApp (HsApp (HsVar (Qual (Module "GHC") (HsIdent "runGhc"))) (HsVar (UnQual (HsIdent "mbMinusB")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 150, srcColumn = 20}) (HsPVar (HsIdent "dflags")) (HsVar (Qual (Module "GHC") (HsIdent "getSessionDynFlags"))),HsQualifier (HsCase (HsVar (UnQual (HsIdent "postStartupMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 153, srcColumn = 17}) (HsPApp (UnQual (HsIdent "Left")) [HsPVar (HsIdent "preLoadMode")]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsCase (HsVar (UnQual (HsIdent "preLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 156, srcColumn = 29}) (HsPApp (UnQual (HsIdent "ShowInfo")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "showInfo"))) (HsVar (UnQual (HsIdent "dflags"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 157, srcColumn = 29}) (HsPApp (UnQual (HsIdent "ShowGhcUsage")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "showGhcUsage"))) (HsVar (UnQual (HsIdent "dflags"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 158, srcColumn = 29}) (HsPApp (UnQual (HsIdent "ShowGhciUsage")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "showGhciUsage"))) (HsVar (UnQual (HsIdent "dflags"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 159, srcColumn = 29}) (HsPApp (UnQual (HsIdent "PrintWithDynFlags")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "f"))) (HsVar (UnQual (HsIdent "dflags"))))))) []])]))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 160, srcColumn = 17}) (HsPApp (UnQual (HsIdent "Right")) [HsPVar (HsIdent "postLoadMode")]) (HsUnGuardedAlt (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "main'"))) (HsVar (UnQual (HsIdent "postLoadMode")))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "dflags")))) (HsVar (UnQual (HsIdent "argv3")))) (HsVar (UnQual (HsIdent "flagWarnings"))))) []])]))) []])]))])) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 163, srcColumn = 1}) [HsIdent "main'"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Located"))) (HsTyCon (UnQual (HsIdent "String"))))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "Warn")))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon))))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 165, srcColumn = 1}) (HsIdent "main'") [HsPVar (HsIdent "postLoadMode"),HsPVar (HsIdent "units"),HsPVar (HsIdent "dflags0"),HsPVar (HsIdent "args"),HsPVar (HsIdent "flagWarnings")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 166, srcColumn = 7}) (HsPVar (HsIdent "args'")) (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "postLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 167, srcColumn = 17}) (HsPApp (UnQual (HsIdent "DoRun")) []) (HsUnGuardedAlt (HsApp (HsApp (HsVar (UnQual (HsIdent "takeWhile"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 167, srcColumn = 38}) [HsPVar (HsIdent "arg")] (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "unLoc"))) (HsVar (UnQual (HsIdent "arg")))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsString "--")))))) (HsVar (UnQual (HsIdent "args"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 168, srcColumn = 17}) HsPWildCard (HsUnGuardedAlt (HsVar (UnQual (HsIdent "args")))) []])) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 174, srcColumn = 7}) (HsPVar (HsIdent "dflt_backend")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "backend"))) (HsVar (UnQual (HsIdent "dflags0"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 175, srcColumn = 7}) (HsPTuple [HsPVar (HsIdent "mode"),HsPVar (HsIdent "bcknd"),HsPVar (HsIdent "link")]) (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "postLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 177, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoInteractive")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "CompManager")),HsVar (UnQual (HsIdent "interpreterBackend")),HsCon (UnQual (HsIdent "LinkInMemory"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 178, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard]) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "CompManager")),HsVar (UnQual (HsIdent "interpreterBackend")),HsCon (UnQual (HsIdent "LinkInMemory"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 179, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoRun")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "CompManager")),HsVar (UnQual (HsIdent "interpreterBackend")),HsCon (UnQual (HsIdent "LinkInMemory"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 180, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoMake")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "CompManager")),HsVar (UnQual (HsIdent "dflt_backend")),HsCon (UnQual (HsIdent "LinkBinary"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 181, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoBackpack")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "CompManager")),HsVar (UnQual (HsIdent "dflt_backend")),HsCon (UnQual (HsIdent "LinkBinary"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 182, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoMkDependHS")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "MkDepend")),HsVar (UnQual (HsIdent "dflt_backend")),HsCon (UnQual (HsIdent "LinkBinary"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 183, srcColumn = 16}) (HsPApp (UnQual (HsIdent "DoAbiHash")) []) (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "OneShot")),HsVar (UnQual (HsIdent "dflt_backend")),HsCon (UnQual (HsIdent "LinkBinary"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 184, srcColumn = 16}) HsPWildCard (HsUnGuardedAlt (HsTuple [HsCon (UnQual (HsIdent "OneShot")),HsVar (UnQual (HsIdent "dflt_backend")),HsCon (UnQual (HsIdent "LinkBinary"))])) []])) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 186, srcColumn = 7}) (HsPVar (HsIdent "dflags1")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "dflags0"))) [HsFieldUpdate (UnQual (HsIdent "ghcMode")) (HsVar (UnQual (HsIdent "mode"))),HsFieldUpdate (UnQual (HsIdent "backend")) (HsVar (UnQual (HsIdent "bcknd"))),HsFieldUpdate (UnQual (HsIdent "ghcLink")) (HsVar (UnQual (HsIdent "link"))),HsFieldUpdate (UnQual (HsIdent "verbosity")) (HsCase (HsVar (UnQual (HsIdent "postLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 190, srcColumn = 42}) (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard]) (HsUnGuardedAlt (HsLit (HsInt 0))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 191, srcColumn = 42}) (HsPApp (UnQual (HsIdent "DoRun")) []) (HsUnGuardedAlt (HsLit (HsInt 0))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 192, srcColumn = 42}) (HsPVar (HsIdent "_other")) (HsUnGuardedAlt (HsLit (HsInt 1))) []])])) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 203, srcColumn = 7}) (HsPVar (HsIdent "dflags2")) (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "postLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 204, srcColumn = 11}) (HsPApp (UnQual (HsIdent "DoInteractive")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "def_ghci_flags")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 205, srcColumn = 11}) (HsPApp (UnQual (HsIdent "DoEval")) [HsPVar (HsIdent "x")]) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "def_ghci_flags")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 206, srcColumn = 11}) (HsPApp (UnQual (HsIdent "DoRun")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "def_ghci_flags")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 207, srcColumn = 11}) HsPWildCard (HsUnGuardedAlt (HsVar (UnQual (HsIdent "dflags1")))) []])) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 208, srcColumn = 15}) (HsPVar (HsIdent "def_ghci_flags")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "dflags1"))) (HsQVarOp (UnQual (HsIdent "gopt_set"))) (HsCon (UnQual (HsIdent "Opt_ImplicitImportQualified")))) (HsQVarOp (UnQual (HsIdent "gopt_set"))) (HsCon (UnQual (HsIdent "Opt_IgnoreOptimChanges")))) (HsQVarOp (UnQual (HsIdent "gopt_set"))) (HsCon (UnQual (HsIdent "Opt_IgnoreHpcChanges"))))) []]],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 212, srcColumn = 11}) (HsPVar (HsIdent "logger1")) (HsVar (UnQual (HsIdent "getLogger"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 213, srcColumn = 7}) (HsPVar (HsIdent "logger2")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "setLogFlags"))) (HsVar (UnQual (HsIdent "logger1")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "initLogFlags"))) (HsVar (UnQual (HsIdent "dflags2"))))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 217, srcColumn = 48}) (HsPTuple [HsPVar (HsIdent "dflags3"),HsPVar (HsIdent "fileish_args"),HsPVar (HsIdent "dynamicFlagWarnings")]) (HsApp (HsApp (HsApp (HsVar (Qual (Module "GHC") (HsIdent "parseDynamicFlags"))) (HsVar (UnQual (HsIdent "logger2")))) (HsVar (UnQual (HsIdent "dflags2")))) (HsVar (UnQual (HsIdent "args'")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 220, srcColumn = 7}) (HsPVar (HsIdent "dflags4")) (HsUnGuardedRhs (HsIf (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "backendNeedsFullWays"))) (HsVar (UnQual (HsIdent "bcknd")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "gopt"))) (HsCon (UnQual (HsIdent "Opt_ExternalInterpreter")))) (HsVar (UnQual (HsIdent "dflags3"))))))) (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 223, srcColumn = 25}) (HsPVar (HsIdent "platform")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "targetPlatform"))) (HsVar (UnQual (HsIdent "dflags3"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 224, srcColumn = 25}) (HsPVar (HsIdent "dflags3a")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "dflags3"))) [HsFieldUpdate (UnQual (HsIdent "targetWays_")) (HsVar (UnQual (HsIdent "hostFullWays")))])) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 225, srcColumn = 25}) (HsPVar (HsIdent "dflags3b")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "foldl"))) (HsVar (UnQual (HsIdent "gopt_set")))) (HsVar (UnQual (HsIdent "dflags3a")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "concatMap"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "wayGeneralFlags"))) (HsVar (UnQual (HsIdent "platform")))))) (HsVar (UnQual (HsIdent "hostFullWays")))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 228, srcColumn = 25}) (HsPVar (HsIdent "dflags3c")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "foldl"))) (HsVar (UnQual (HsIdent "gopt_unset")))) (HsVar (UnQual (HsIdent "dflags3b")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "concatMap"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "wayUnsetGeneralFlags"))) (HsVar (UnQual (HsIdent "platform")))))) (HsVar (UnQual (HsIdent "hostFullWays")))))) []] (HsVar (UnQual (HsIdent "dflags3c")))) (HsVar (UnQual (HsIdent "dflags3"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 235, srcColumn = 7}) (HsPVar (HsIdent "logger4")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "setLogFlags"))) (HsVar (UnQual (HsIdent "logger2")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "initLogFlags"))) (HsVar (UnQual (HsIdent "dflags4"))))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (Qual (Module "GHC") (HsIdent "prettyPrintGhcErrors"))) (HsVar (UnQual (HsIdent "logger4")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "handleSourceError"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 239, srcColumn = 23}) [HsPVar (HsIdent "e")] (HsDo [HsQualifier (HsApp (HsVar (Qual (Module "GHC") (HsIdent "printException"))) (HsVar (UnQual (HsIdent "e")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "exitWith"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))))])))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "handleFlagWarnings"))) (HsVar (UnQual (HsIdent "logger4")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "initDiagOpts"))) (HsVar (UnQual (HsIdent "dflags4")))))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "flagWarnings"))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "dynamicFlagWarnings")))))))]))])),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "showBanner"))) (HsVar (UnQual (HsIdent "postLoadMode")))) (HsVar (UnQual (HsIdent "dflags4"))))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 246, srcColumn = 7}) (HsPTuple [HsPVar (HsIdent "dflags5"),HsPVar (HsIdent "srcs"),HsPVar (HsIdent "objs")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "parseTargetFiles"))) (HsVar (UnQual (HsIdent "dflags4")))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "unLoc")))) (HsVar (UnQual (HsIdent "fileish_args"))))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 249, srcColumn = 5}) HsPWildCard (HsApp (HsVar (Qual (Module "GHC") (HsIdent "setSessionDynFlags"))) (HsVar (UnQual (HsIdent "dflags5")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 250, srcColumn = 11}) (HsPVar (HsIdent "dflags6")) (HsVar (Qual (Module "GHC") (HsIdent "getSessionDynFlags"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 251, srcColumn = 11}) (HsPVar (HsIdent "hsc_env")) (HsVar (Qual (Module "GHC") (HsIdent "getSession"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 252, srcColumn = 10}) (HsPVar (HsIdent "logger")) (HsVar (UnQual (HsIdent "getLogger"))),HsQualifier (HsCase (HsApp (HsVar (UnQual (HsIdent "verbosity"))) (HsVar (UnQual (HsIdent "dflags6")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 256, srcColumn = 5}) (HsPVar (HsIdent "v")) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 256, srcColumn = 7}) (HsInfixApp (HsVar (UnQual (HsIdent "v"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsLit (HsInt 4))) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "dumpUnitsSimple"))) (HsVar (UnQual (HsIdent "hsc_env"))))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 257, srcColumn = 7}) (HsInfixApp (HsVar (UnQual (HsIdent "v"))) (HsQVarOp (UnQual (HsSymbol ">="))) (HsLit (HsInt 5))) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "dumpUnits"))) (HsVar (UnQual (HsIdent "hsc_env"))))),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 258, srcColumn = 7}) (HsVar (UnQual (HsIdent "otherwise"))) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))]) []]),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "initUniqSupply"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "initialUnique"))) (HsVar (UnQual (HsIdent "dflags6")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "uniqueIncrement"))) (HsVar (UnQual (HsIdent "dflags6"))))))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "checkOptions"))) (HsVar (UnQual (HsIdent "postLoadMode")))) (HsVar (UnQual (HsIdent "dflags6")))) (HsVar (UnQual (HsIdent "srcs")))) (HsVar (UnQual (HsIdent "objs")))) (HsVar (UnQual (HsIdent "units"))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "handleSourceError"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 265, srcColumn = 23}) [HsPVar (HsIdent "e")] (HsDo [HsQualifier (HsApp (HsVar (Qual (Module "GHC") (HsIdent "printException"))) (HsVar (UnQual (HsIdent "e")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "exitWith"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))))])))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsCase (HsVar (UnQual (HsIdent "postLoadMode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 269, srcColumn = 8}) (HsPApp (UnQual (HsIdent "ShowInterface")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "showIface"))) (HsVar (UnQual (HsIdent "logger")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_dflags"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_units"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_NC"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsVar (UnQual (HsIdent "f")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 274, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoMake")) []) (HsUnGuardedAlt (HsApp (HsApp (HsVar (UnQual (HsIdent "doMake"))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "srcs"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 275, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoMkDependHS")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "doMkDependHS"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "fst")))) (HsVar (UnQual (HsIdent "srcs"))))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 276, srcColumn = 8}) (HsPApp (UnQual (HsIdent "StopBefore")) [HsPVar (HsIdent "p")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "liftIO"))) (HsParen (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "oneShot"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsVar (UnQual (HsIdent "p")))) (HsVar (UnQual (HsIdent "srcs"))))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 277, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoInteractive")) []) (HsUnGuardedAlt (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "ghciUI"))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "srcs")))) (HsCon (UnQual (HsIdent "Nothing"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 278, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoEval")) [HsPVar (HsIdent "exprs")]) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "ghciUI"))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "srcs")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "Just")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "reverse"))) (HsVar (UnQual (HsIdent "exprs")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 279, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoRun")) []) (HsUnGuardedAlt (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "doRun"))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "srcs")))) (HsVar (UnQual (HsIdent "args"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 280, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoAbiHash")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "abiHash"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "fst")))) (HsVar (UnQual (HsIdent "srcs"))))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 281, srcColumn = 8}) (HsPApp (UnQual (HsIdent "ShowPackages")) []) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "showUnits"))) (HsVar (UnQual (HsIdent "hsc_env")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 282, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoFrontend")) [HsPVar (HsIdent "f")]) (HsUnGuardedAlt (HsApp (HsApp (HsVar (UnQual (HsIdent "doFrontend"))) (HsVar (UnQual (HsIdent "f")))) (HsVar (UnQual (HsIdent "srcs"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 283, srcColumn = 8}) (HsPApp (UnQual (HsIdent "DoBackpack")) []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "doBackpack"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "fst")))) (HsVar (UnQual (HsIdent "srcs"))))))) []])])),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "dumpFinalStats"))) (HsVar (UnQual (HsIdent "logger")))))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 287, srcColumn = 1}) [HsIdent "doRun"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "FilePath")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Located"))) (HsTyCon (UnQual (HsIdent "String"))))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 288, srcColumn = 1}) (HsIdent "doRun") [HsPVar (HsIdent "units"),HsPVar (HsIdent "srcs"),HsPVar (HsIdent "args")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 289, srcColumn = 12}) (HsPVar (HsIdent "dflags")) (HsVar (UnQual (HsIdent "getDynFlags"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 290, srcColumn = 9}) (HsPVar (HsIdent "mainFun")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "fromMaybe"))) (HsLit (HsString "main"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "mainFunIs"))) (HsVar (UnQual (HsIdent "dflags"))))))) []],HsQualifier (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "ghciUI"))) (HsVar (UnQual (HsIdent "units")))) (HsVar (UnQual (HsIdent "srcs")))) (HsParen (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsList [HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsLit (HsString "System.Environment.withArgs ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "args'"))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString " (Control.Monad.void "))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "mainFun")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString ")"))]))))])) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 293, srcColumn = 5}) (HsPVar (HsIdent "args'")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "drop"))) (HsLit (HsInt 1))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "dropWhile"))) (HsRightSection (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsString "--"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "unLoc")))) (HsVar (UnQual (HsIdent "args")))))) []]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 295, srcColumn = 1}) [HsIdent "ghciUI"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "FilePath")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyFun (HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String"))))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 296, srcColumn = 1}) (HsIdent "ghciUI") [HsPVar (HsIdent "units"),HsPVar (HsIdent "srcs"),HsPVar (HsIdent "maybe_expr")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 297, srcColumn = 11}) (HsPVar (HsIdent "hs_srcs")) (HsCase (HsApp (HsVar (Qual (Module "NE") (HsIdent "nonEmpty"))) (HsVar (UnQual (HsIdent "units")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 298, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "ne_units")]) (HsUnGuardedAlt (HsDo [HsQualifier (HsApp (HsVar (UnQual (HsIdent "initMulti"))) (HsVar (UnQual (HsIdent "ne_units"))))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 300, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsDo [HsQualifier (HsCase (HsVar (UnQual (HsIdent "srcs"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 302, srcColumn = 9}) (HsPList []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsList []))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 303, srcColumn = 9}) HsPWildCard (HsUnGuardedAlt (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 304, srcColumn = 13}) (HsPVar (HsIdent "s")) (HsApp (HsVar (UnQual (HsIdent "initMake"))) (HsVar (UnQual (HsIdent "srcs")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 305, srcColumn = 26}) [HsPVar (HsIdent "a"),HsPVar (HsIdent "b")] (HsTuple [HsVar (UnQual (HsIdent "a")),HsCon (UnQual (HsIdent "Nothing")),HsVar (UnQual (HsIdent "b"))])))) (HsVar (UnQual (HsIdent "s")))))])) []])])) []]),HsQualifier (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "interactiveUI"))) (HsVar (UnQual (HsIdent "defaultGhciSettings")))) (HsVar (UnQual (HsIdent "hs_srcs")))) (HsVar (UnQual (HsIdent "maybe_expr"))))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 315, srcColumn = 1}) [HsIdent "checkOptions"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 317, srcColumn = 1}) (HsIdent "checkOptions") [HsPVar (HsIdent "mode"),HsPVar (HsIdent "dflags"),HsPVar (HsIdent "srcs"),HsPVar (HsIdent "objs"),HsPVar (HsIdent "units")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 319, srcColumn = 8}) (HsPVar (HsIdent "unknown_opts")) (HsUnGuardedRhs (HsListComp (HsVar (UnQual (HsIdent "f"))) [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 319, srcColumn = 44}) (HsPTuple [HsPAsPat (HsIdent "f") (HsPParen (HsPInfixApp (HsPLit (HsChar '-')) (Special HsCons) HsPWildCard)),HsPWildCard]) (HsVar (UnQual (HsIdent "srcs")))])) []],HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "notNull"))) (HsVar (UnQual (HsIdent "unknown_opts")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "unknownFlagsErr"))) (HsVar (UnQual (HsIdent "unknown_opts")))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (Qual (Module "Set") (HsIdent "null"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "rtsWays"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "ways"))) (HsVar (UnQual (HsIdent "dflags")))))))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isInterpretiveMode"))) (HsVar (UnQual (HsIdent "mode"))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsParen (HsLit (HsString "Warning: -debug, -threaded and -ticky are ignored by GHCi"))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsInfixApp (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "fullWays"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "ways"))) (HsVar (UnQual (HsIdent "dflags")))))) (HsQVarOp (UnQual (HsSymbol "/="))) (HsVar (UnQual (HsIdent "hostFullWays"))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isInterpretiveMode"))) (HsVar (UnQual (HsIdent "mode"))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "gopt"))) (HsCon (UnQual (HsIdent "Opt_ExternalInterpreter")))) (HsVar (UnQual (HsIdent "dflags"))))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "UsageError"))) (HsLit (HsString "-fexternal-interpreter is required when using --interactive with a non-standard way (-prof, -static, or -dynamic).")))))])),HsQualifier (HsIf (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "outputHi"))) (HsVar (UnQual (HsIdent "dflags")))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsParen (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isCompManagerMode"))) (HsVar (UnQual (HsIdent "mode")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "srcs")))) (HsQVarOp (UnQual (HsIdent "lengthExceeds"))) (HsLit (HsInt 1)))))) (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "UsageError"))) (HsLit (HsString "-ohi can only be used when compiling a single source file"))))) (HsDo [HsQualifier (HsIf (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "dynOutputHi"))) (HsVar (UnQual (HsIdent "dflags")))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsParen (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isCompManagerMode"))) (HsVar (UnQual (HsIdent "mode")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "srcs")))) (HsQVarOp (UnQual (HsIdent "lengthExceeds"))) (HsLit (HsInt 1)))))) (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "UsageError"))) (HsLit (HsString "-dynohi can only be used when compiling a single source file"))))) (HsDo [HsQualifier (HsIf (HsParen (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "srcs"))) (HsQVarOp (UnQual (HsIdent "lengthExceeds"))) (HsLit (HsInt 1))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "outputFile"))) (HsVar (UnQual (HsIdent "dflags"))))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isLinkMode"))) (HsVar (UnQual (HsIdent "mode")))))))) (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "UsageError"))) (HsLit (HsString "can't apply -o to multiple source files"))))) (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 349, srcColumn = 12}) (HsPVar (HsIdent "not_linking")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isLinkMode"))) (HsVar (UnQual (HsIdent "mode")))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "isNoLink"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "ghcLink"))) (HsVar (UnQual (HsIdent "dflags")))))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "not_linking"))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "objs"))))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsParen (HsInfixApp (HsLit (HsString "Warning: the following files would be used as linker inputs, but linking is not being done: ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "unwords"))) (HsVar (UnQual (HsIdent "objs")))))))),HsQualifier (HsIf (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "srcs")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "objs")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsVar (UnQual (HsIdent "not_linking")))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "needsInputsMode"))) (HsVar (UnQual (HsIdent "mode"))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "units"))))) (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "UsageError"))) (HsLit (HsString "no input files"))))) (HsDo [HsQualifier (HsCase (HsVar (UnQual (HsIdent "mode"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 361, srcColumn = 11}) (HsPApp (UnQual (HsIdent "StopBefore")) [HsPApp (UnQual (HsIdent "StopC")) []]) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 361, srcColumn = 28}) (HsApp (HsVar (UnQual (HsIdent "not"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "backendGeneratesHc"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "backend"))) (HsVar (UnQual (HsIdent "dflags")))))))) (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "UsageError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "the option -C is only available with an unregisterised GHC")))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 364, srcColumn = 11}) (HsPApp (UnQual (HsIdent "StopBefore")) [HsPApp (UnQual (HsIdent "StopAs")) []]) (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 364, srcColumn = 29}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "ghcLink"))) (HsVar (UnQual (HsIdent "dflags")))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsCon (UnQual (HsIdent "NoLink")))) (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "UsageError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "the options -S and -fno-code are incompatible. Please omit -S")))]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 368, srcColumn = 11}) HsPWildCard (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) []])])),HsQualifier (HsApp (HsVar (UnQual (HsIdent "verifyOutputFiles"))) (HsVar (UnQual (HsIdent "dflags"))))]))]))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 383, srcColumn = 1}) [HsIdent "verifyOutputFiles"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 384, srcColumn = 1}) (HsIdent "verifyOutputFiles") [HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 385, srcColumn = 7}) (HsPVar (HsIdent "ofile")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputFile"))) (HsVar (UnQual (HsIdent "dflags"))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsVar (UnQual (HsIdent "ofile")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 387, srcColumn = 10}) (HsPVar (HsIdent "fn")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "fromJust"))) (HsVar (UnQual (HsIdent "ofile"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 388, srcColumn = 10}) (HsPVar (HsIdent "flg")) (HsApp (HsVar (UnQual (HsIdent "doesDirNameExist"))) (HsVar (UnQual (HsIdent "fn")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "not"))) (HsVar (UnQual (HsIdent "flg")))))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "nonExistentDir"))) (HsLit (HsString "-o"))) (HsVar (UnQual (HsIdent "fn"))))))])),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 390, srcColumn = 7}) (HsPVar (HsIdent "ohi")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "outputHi"))) (HsVar (UnQual (HsIdent "dflags"))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "isJust"))) (HsVar (UnQual (HsIdent "ohi")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 392, srcColumn = 10}) (HsPVar (HsIdent "hi")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "fromJust"))) (HsVar (UnQual (HsIdent "ohi"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 393, srcColumn = 10}) (HsPVar (HsIdent "flg")) (HsApp (HsVar (UnQual (HsIdent "doesDirNameExist"))) (HsVar (UnQual (HsIdent "hi")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "not"))) (HsVar (UnQual (HsIdent "flg")))))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "nonExistentDir"))) (HsLit (HsString "-ohi"))) (HsVar (UnQual (HsIdent "hi"))))))]))])) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 396, srcColumn = 4}) (HsIdent "nonExistentDir") [HsPVar (HsIdent "flg"),HsPVar (HsIdent "dir")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "CmdLineError"))) (HsParen (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsLit (HsString "error: directory portion of ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "dir"))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString " does not exist (used with "))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "flg"))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString " option.)")))))))) []]]],HsTypeDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 404, srcColumn = 1}) (HsIdent "Mode") [] (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "Either"))) (HsTyCon (UnQual (HsIdent "PreStartupMode")))) (HsTyCon (UnQual (HsIdent "PostStartupMode")))),HsTypeDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 405, srcColumn = 1}) (HsIdent "PostStartupMode") [] (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "Either"))) (HsTyCon (UnQual (HsIdent "PreLoadMode")))) (HsTyCon (UnQual (HsIdent "PostLoadMode")))),HsDataDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 407, srcColumn = 1}) [] (HsIdent "PreStartupMode") [] [HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 408, srcColumn = 5}) (HsIdent "ShowVersion") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 409, srcColumn = 5}) (HsIdent "ShowNumVersion") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 410, srcColumn = 5}) (HsIdent "ShowSupportedExtensions") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 411, srcColumn = 5}) (HsIdent "ShowOptions") [HsUnBangedTy (HsTyCon (UnQual (HsIdent "Bool")))]] [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 413, srcColumn = 1}) [HsIdent "showVersionMode",HsIdent "showNumVersionMode",HsIdent "showSupportedExtensionsMode",HsIdent "showOptionsMode"] (HsQualType [] (HsTyCon (UnQual (HsIdent "Mode")))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 414, srcColumn = 1}) (HsPVar (HsIdent "showVersionMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreStartupMode"))) (HsCon (UnQual (HsIdent "ShowVersion"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 415, srcColumn = 1}) (HsPVar (HsIdent "showNumVersionMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreStartupMode"))) (HsCon (UnQual (HsIdent "ShowNumVersion"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 416, srcColumn = 1}) (HsPVar (HsIdent "showSupportedExtensionsMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreStartupMode"))) (HsCon (UnQual (HsIdent "ShowSupportedExtensions"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 417, srcColumn = 1}) (HsPVar (HsIdent "showOptionsMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreStartupMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ShowOptions"))) (HsCon (UnQual (HsIdent "False"))))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 419, srcColumn = 1}) [HsIdent "mkPreStartupMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PreStartupMode"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 420, srcColumn = 1}) (HsPVar (HsIdent "mkPreStartupMode")) (HsUnGuardedRhs (HsCon (UnQual (HsIdent "Left")))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 422, srcColumn = 1}) [HsIdent "isShowVersionMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 423, srcColumn = 1}) (HsIdent "isShowVersionMode") [HsPParen (HsPApp (UnQual (HsIdent "Left")) [HsPApp (UnQual (HsIdent "ShowVersion")) []])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 424, srcColumn = 1}) (HsIdent "isShowVersionMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 426, srcColumn = 1}) [HsIdent "isShowNumVersionMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 427, srcColumn = 1}) (HsIdent "isShowNumVersionMode") [HsPParen (HsPApp (UnQual (HsIdent "Left")) [HsPApp (UnQual (HsIdent "ShowNumVersion")) []])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 428, srcColumn = 1}) (HsIdent "isShowNumVersionMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsDataDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 430, srcColumn = 1}) [] (HsIdent "PreLoadMode") [] [HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 431, srcColumn = 5}) (HsIdent "ShowGhcUsage") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 432, srcColumn = 5}) (HsIdent "ShowGhciUsage") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 433, srcColumn = 5}) (HsIdent "ShowInfo") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 434, srcColumn = 5}) (HsIdent "PrintWithDynFlags") [HsUnBangedTy (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyCon (UnQual (HsIdent "String"))))]] [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 436, srcColumn = 1}) [HsIdent "showGhcUsageMode",HsIdent "showGhciUsageMode",HsIdent "showInfoMode"] (HsQualType [] (HsTyCon (UnQual (HsIdent "Mode")))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 437, srcColumn = 1}) (HsPVar (HsIdent "showGhcUsageMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreLoadMode"))) (HsCon (UnQual (HsIdent "ShowGhcUsage"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 438, srcColumn = 1}) (HsPVar (HsIdent "showGhciUsageMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreLoadMode"))) (HsCon (UnQual (HsIdent "ShowGhciUsage"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 439, srcColumn = 1}) (HsPVar (HsIdent "showInfoMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreLoadMode"))) (HsCon (UnQual (HsIdent "ShowInfo"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 441, srcColumn = 1}) [HsIdent "printSetting"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 442, srcColumn = 1}) (HsIdent "printSetting") [HsPVar (HsIdent "k")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPreLoadMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PrintWithDynFlags"))) (HsVar (UnQual (HsIdent "f"))))))) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 443, srcColumn = 11}) (HsIdent "f") [HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "fromMaybe"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "panic"))) (HsParen (HsInfixApp (HsLit (HsString "Setting not found: ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "k"))))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "lookup"))) (HsVar (UnQual (HsIdent "k")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "compilerInfo"))) (HsVar (UnQual (HsIdent "dflags")))))))) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 446, srcColumn = 1}) [HsIdent "mkPreLoadMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PreLoadMode"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 447, srcColumn = 1}) (HsPVar (HsIdent "mkPreLoadMode")) (HsUnGuardedRhs (HsInfixApp (HsCon (UnQual (HsIdent "Right"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsCon (UnQual (HsIdent "Left"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 449, srcColumn = 1}) [HsIdent "isShowGhcUsageMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 450, srcColumn = 1}) (HsIdent "isShowGhcUsageMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Left")) [HsPApp (UnQual (HsIdent "ShowGhcUsage")) []])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 451, srcColumn = 1}) (HsIdent "isShowGhcUsageMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 453, srcColumn = 1}) [HsIdent "isShowGhciUsageMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 454, srcColumn = 1}) (HsIdent "isShowGhciUsageMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Left")) [HsPApp (UnQual (HsIdent "ShowGhciUsage")) []])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 455, srcColumn = 1}) (HsIdent "isShowGhciUsageMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsDataDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 457, srcColumn = 1}) [] (HsIdent "PostLoadMode") [] [HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 458, srcColumn = 5}) (HsIdent "ShowInterface") [HsUnBangedTy (HsTyCon (UnQual (HsIdent "FilePath")))],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 459, srcColumn = 5}) (HsIdent "DoMkDependHS") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 460, srcColumn = 5}) (HsIdent "StopBefore") [HsUnBangedTy (HsTyCon (UnQual (HsIdent "StopPhase")))],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 462, srcColumn = 5}) (HsIdent "DoMake") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 463, srcColumn = 5}) (HsIdent "DoBackpack") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 464, srcColumn = 5}) (HsIdent "DoInteractive") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 465, srcColumn = 5}) (HsIdent "DoEval") [HsUnBangedTy (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String"))))],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 466, srcColumn = 5}) (HsIdent "DoRun") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 467, srcColumn = 5}) (HsIdent "DoAbiHash") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 468, srcColumn = 5}) (HsIdent "ShowPackages") [],HsConDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 469, srcColumn = 5}) (HsIdent "DoFrontend") [HsUnBangedTy (HsTyCon (UnQual (HsIdent "ModuleName")))]] [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 471, srcColumn = 1}) [HsIdent "doMkDependHSMode",HsIdent "doMakeMode",HsIdent "doInteractiveMode",HsIdent "doRunMode",HsIdent "doAbiHashMode",HsIdent "showUnitsMode"] (HsQualType [] (HsTyCon (UnQual (HsIdent "Mode")))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 473, srcColumn = 1}) (HsPVar (HsIdent "doMkDependHSMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoMkDependHS"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 474, srcColumn = 1}) (HsPVar (HsIdent "doMakeMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoMake"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 475, srcColumn = 1}) (HsPVar (HsIdent "doInteractiveMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoInteractive"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 476, srcColumn = 1}) (HsPVar (HsIdent "doRunMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoRun"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 477, srcColumn = 1}) (HsPVar (HsIdent "doAbiHashMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoAbiHash"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 478, srcColumn = 1}) (HsPVar (HsIdent "showUnitsMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "ShowPackages"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 480, srcColumn = 1}) [HsIdent "showInterfaceMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "FilePath"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 481, srcColumn = 1}) (HsIdent "showInterfaceMode") [HsPVar (HsIdent "fp")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ShowInterface"))) (HsVar (UnQual (HsIdent "fp"))))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 483, srcColumn = 1}) [HsIdent "stopBeforeMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "StopPhase"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 484, srcColumn = 1}) (HsIdent "stopBeforeMode") [HsPVar (HsIdent "phase")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "StopBefore"))) (HsVar (UnQual (HsIdent "phase"))))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 486, srcColumn = 1}) [HsIdent "doEvalMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 487, srcColumn = 1}) (HsIdent "doEvalMode") [HsPVar (HsIdent "str")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "DoEval"))) (HsList [HsVar (UnQual (HsIdent "str"))]))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 489, srcColumn = 1}) [HsIdent "doFrontendMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 490, srcColumn = 1}) (HsIdent "doFrontendMode") [HsPVar (HsIdent "str")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "DoFrontend"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "mkModuleName"))) (HsVar (UnQual (HsIdent "str"))))))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 492, srcColumn = 1}) [HsIdent "doBackpackMode"] (HsQualType [] (HsTyCon (UnQual (HsIdent "Mode")))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 493, srcColumn = 1}) (HsPVar (HsIdent "doBackpackMode")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkPostLoadMode"))) (HsCon (UnQual (HsIdent "DoBackpack"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 495, srcColumn = 1}) [HsIdent "mkPostLoadMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Mode"))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 496, srcColumn = 1}) (HsPVar (HsIdent "mkPostLoadMode")) (HsUnGuardedRhs (HsInfixApp (HsCon (UnQual (HsIdent "Right"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsCon (UnQual (HsIdent "Right"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 498, srcColumn = 1}) [HsIdent "isDoInteractiveMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 499, srcColumn = 1}) (HsIdent "isDoInteractiveMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPApp (UnQual (HsIdent "DoInteractive")) []])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 500, srcColumn = 1}) (HsIdent "isDoInteractiveMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 502, srcColumn = 1}) [HsIdent "isStopLnMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 503, srcColumn = 1}) (HsIdent "isStopLnMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "StopBefore")) [HsPApp (UnQual (HsIdent "NoStop")) []])])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 504, srcColumn = 1}) (HsIdent "isStopLnMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 506, srcColumn = 1}) [HsIdent "isDoMakeMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 507, srcColumn = 1}) (HsIdent "isDoMakeMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPApp (UnQual (HsIdent "DoMake")) []])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 508, srcColumn = 1}) (HsIdent "isDoMakeMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 510, srcColumn = 1}) [HsIdent "isDoEvalMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 511, srcColumn = 1}) (HsIdent "isDoEvalMode") [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard])])])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 512, srcColumn = 1}) (HsIdent "isDoEvalMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 514, srcColumn = 1}) [HsIdent "isInteractiveMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 515, srcColumn = 1}) (HsIdent "isInteractiveMode") [HsPApp (UnQual (HsIdent "DoInteractive")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 516, srcColumn = 1}) (HsIdent "isInteractiveMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 519, srcColumn = 1}) [HsIdent "isInterpretiveMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 520, srcColumn = 1}) (HsIdent "isInterpretiveMode") [HsPApp (UnQual (HsIdent "DoInteractive")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 521, srcColumn = 1}) (HsIdent "isInterpretiveMode") [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 522, srcColumn = 1}) (HsIdent "isInterpretiveMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 524, srcColumn = 1}) [HsIdent "needsInputsMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 525, srcColumn = 1}) (HsIdent "needsInputsMode") [HsPApp (UnQual (HsIdent "DoMkDependHS")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 526, srcColumn = 1}) (HsIdent "needsInputsMode") [HsPParen (HsPApp (UnQual (HsIdent "StopBefore")) [HsPWildCard])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 527, srcColumn = 1}) (HsIdent "needsInputsMode") [HsPApp (UnQual (HsIdent "DoMake")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 528, srcColumn = 1}) (HsIdent "needsInputsMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 532, srcColumn = 1}) [HsIdent "isLinkMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 533, srcColumn = 1}) (HsIdent "isLinkMode") [HsPParen (HsPApp (UnQual (HsIdent "StopBefore")) [HsPApp (UnQual (HsIdent "NoStop")) []])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 534, srcColumn = 1}) (HsIdent "isLinkMode") [HsPApp (UnQual (HsIdent "DoMake")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 535, srcColumn = 1}) (HsIdent "isLinkMode") [HsPApp (UnQual (HsIdent "DoRun")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 536, srcColumn = 1}) (HsIdent "isLinkMode") [HsPApp (UnQual (HsIdent "DoInteractive")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 537, srcColumn = 1}) (HsIdent "isLinkMode") [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 538, srcColumn = 1}) (HsIdent "isLinkMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 540, srcColumn = 1}) [HsIdent "isCompManagerMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyCon (UnQual (HsIdent "Bool"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 541, srcColumn = 1}) (HsIdent "isCompManagerMode") [HsPApp (UnQual (HsIdent "DoRun")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 542, srcColumn = 1}) (HsIdent "isCompManagerMode") [HsPApp (UnQual (HsIdent "DoMake")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 543, srcColumn = 1}) (HsIdent "isCompManagerMode") [HsPApp (UnQual (HsIdent "DoInteractive")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 544, srcColumn = 1}) (HsIdent "isCompManagerMode") [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPWildCard])] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "True")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 545, srcColumn = 1}) (HsIdent "isCompManagerMode") [HsPWildCard] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "False")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 550, srcColumn = 1}) [HsIdent "parseModeFlags"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Located"))) (HsTyCon (UnQual (HsIdent "String"))))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyTuple [HsTyCon (UnQual (HsIdent "Mode")),HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String"))),HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Located"))) (HsTyCon (UnQual (HsIdent "String")))),HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "Warn")))])))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 554, srcColumn = 1}) (HsIdent "parseModeFlags") [HsPVar (HsIdent "args")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 555, srcColumn = 65}) (HsPTuple [HsPTuple [HsPVar (HsIdent "leftover"),HsPVar (HsIdent "errs1"),HsPVar (HsIdent "warns")],HsPTuple [HsPVar (HsIdent "mModeFlag"),HsPVar (HsIdent "units"),HsPVar (HsIdent "errs2"),HsPVar (HsIdent "flags'")]]) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "processCmdLineP"))) (HsVar (UnQual (HsIdent "mode_flags")))) (HsTuple [HsCon (UnQual (HsIdent "Nothing")),HsList [],HsList [],HsList []])) (HsVar (UnQual (HsIdent "args")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 557, srcColumn = 7}) (HsPVar (HsIdent "mode")) (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "mModeFlag"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 558, srcColumn = 14}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "doMakeMode")))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 559, srcColumn = 14}) (HsPApp (UnQual (HsIdent "Just")) [HsPTuple [HsPVar (HsIdent "m"),HsPWildCard]]) (HsUnGuardedAlt (HsVar (UnQual (HsIdent "m")))) []])) []],HsQualifier (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "unless"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "errs1")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "errs2"))))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "throwGhcException")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "errorsToGhcException")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsTuple [HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 563, srcColumn = 14}) [HsPVar (HsIdent "k")] (HsLit (HsString "on the commandline")),HsVar (UnQual (HsIdent "k"))])))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "unLoc"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "errMsg")))))) (HsVar (UnQual (HsIdent "errs1"))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "errs2")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsTuple [HsVar (UnQual (HsIdent "mode")),HsVar (UnQual (HsIdent "units")),HsInfixApp (HsVar (UnQual (HsIdent "flags'"))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "leftover"))),HsVar (UnQual (HsIdent "warns"))]))])) []],HsTypeDecl (SrcLoc {srcFilename = "<unknown>", srcLine = 567, srcColumn = 1}) (HsIdent "ModeM") [] (HsTyApp (HsTyCon (UnQual (HsIdent "CmdLineP"))) (HsTyTuple [HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyTuple [HsTyCon (UnQual (HsIdent "Mode")),HsTyCon (UnQual (HsIdent "String"))]),HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String"))),HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String"))),HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Located"))) (HsTyCon (UnQual (HsIdent "String"))))])),HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 571, srcColumn = 1}) [HsIdent "mode_flags"] (HsQualType [] (HsTyApp (HsTyCon (Special HsListCon)) (HsTyApp (HsTyCon (UnQual (HsIdent "Flag"))) (HsTyCon (UnQual (HsIdent "ModeM")))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 572, srcColumn = 1}) (HsPVar (HsIdent "mode_flags")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsList [HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "?"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showGhcUsageMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-help"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showGhcUsageMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "V"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showVersionMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-version"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showVersionMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-numeric-version"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showNumVersionMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-info"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showInfoMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-show-options"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showOptionsMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-supported-languages"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showSupportedExtensionsMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-supported-extensions"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showSupportedExtensionsMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-show-packages"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "showUnitsMode")))))))]) (HsQVarOp (UnQual (HsSymbol "++"))) (HsListComp (HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsVar (UnQual (HsIdent "k'")))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "printSetting"))) (HsVar (UnQual (HsIdent "k")))))))))) [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 586, srcColumn = 7}) (HsPVar (HsIdent "k")) (HsList [HsLit (HsString "Project version"),HsLit (HsString "Project Git commit id"),HsLit (HsString "Booter version"),HsLit (HsString "Stage"),HsLit (HsString "Build platform"),HsLit (HsString "Host platform"),HsLit (HsString "Target platform"),HsLit (HsString "Have interpreter"),HsLit (HsString "Object splitting supported"),HsLit (HsString "Have native code generator"),HsLit (HsString "Support SMP"),HsLit (HsString "Unregisterised"),HsLit (HsString "Tables next to code"),HsLit (HsString "RTS ways"),HsLit (HsString "Leading underscore"),HsLit (HsString "Debug on"),HsLit (HsString "LibDir"),HsLit (HsString "Global Package DB"),HsLit (HsString "C compiler flags"),HsLit (HsString "C compiler link flags"),HsLit (HsString "ld flags")]),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 607, srcColumn = 9}) (HsPVar (HsIdent "k'")) (HsUnGuardedRhs (HsInfixApp (HsLit (HsString "-print-")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "replaceSpace"))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "toLower")))))) (HsVar (UnQual (HsIdent "k")))))) [],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 608, srcColumn = 9}) (HsIdent "replaceSpace") [HsPLit (HsChar ' ')] (HsUnGuardedRhs (HsLit (HsChar '-'))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 609, srcColumn = 9}) (HsIdent "replaceSpace") [HsPVar (HsIdent "c")] (HsUnGuardedRhs (HsVar (UnQual (HsIdent "c")))) []]]])) (HsQVarOp (UnQual (HsSymbol "++"))) (HsList [HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-show-iface"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "HasArg"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 612, srcColumn = 38}) [HsPVar (HsIdent "f")] (HsApp (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "showInterfaceMode"))) (HsVar (UnQual (HsIdent "f")))))) (HsLit (HsString "--show-iface"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "c"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 616, srcColumn = 40}) [HsPVar (HsIdent "f")] (HsDo [HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "stopBeforeMode"))) (HsCon (UnQual (HsIdent "NoStop")))))) (HsVar (UnQual (HsIdent "f")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "addFlag"))) (HsLit (HsString "-no-link"))) (HsVar (UnQual (HsIdent "f"))))]))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "M"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doMkDependHSMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "E"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "stopBeforeMode"))) (HsCon (UnQual (HsIdent "StopPreprocess"))))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "C"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "stopBeforeMode"))) (HsCon (UnQual (HsIdent "StopC"))))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "S"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "stopBeforeMode"))) (HsCon (UnQual (HsIdent "StopAs"))))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-run"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doRunMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-make"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doMakeMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "unit"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "SepArg"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 624, srcColumn = 40}) [HsPVar (HsIdent "s")] (HsApp (HsApp (HsVar (UnQual (HsIdent "addUnit"))) (HsVar (UnQual (HsIdent "s")))) (HsLit (HsString "-unit"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-backpack"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doBackpackMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-interactive"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doInteractiveMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-abi-hash"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "PassFlag"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsVar (UnQual (HsIdent "doAbiHashMode"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "e"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "SepArg"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 628, srcColumn = 40}) [HsPVar (HsIdent "s")] (HsApp (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "doEvalMode"))) (HsVar (UnQual (HsIdent "s")))))) (HsLit (HsString "-e"))))))),HsApp (HsApp (HsVar (UnQual (HsIdent "defFlag"))) (HsLit (HsString "-frontend"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "SepArg"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 629, srcColumn = 40}) [HsPVar (HsIdent "s")] (HsApp (HsApp (HsVar (UnQual (HsIdent "setMode"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "doFrontendMode"))) (HsVar (UnQual (HsIdent "s")))))) (HsLit (HsString "-frontend")))))))]))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 632, srcColumn = 1}) [HsIdent "addUnit"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "EwM"))) (HsTyCon (UnQual (HsIdent "ModeM")))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 633, srcColumn = 1}) (HsIdent "addUnit") [HsPVar (HsIdent "unit_str"),HsPVar (HsIdent "_arg")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftEwM"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 634, srcColumn = 36}) (HsPTuple [HsPVar (HsIdent "mModeFlag"),HsPVar (HsIdent "units"),HsPVar (HsIdent "errs"),HsPVar (HsIdent "flags'")]) (HsVar (UnQual (HsIdent "getCmdLineState"))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "putCmdLineState"))) (HsTuple [HsVar (UnQual (HsIdent "mModeFlag")),HsInfixApp (HsVar (UnQual (HsIdent "unit_str"))) (HsQConOp (Special HsCons)) (HsVar (UnQual (HsIdent "units"))),HsVar (UnQual (HsIdent "errs")),HsVar (UnQual (HsIdent "flags'"))]))]))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 637, srcColumn = 1}) [HsIdent "setMode"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Mode"))) (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "EwM"))) (HsTyCon (UnQual (HsIdent "ModeM")))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 638, srcColumn = 1}) (HsIdent "setMode") [HsPVar (HsIdent "newMode"),HsPVar (HsIdent "newFlag")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftEwM"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 639, srcColumn = 38}) (HsPTuple [HsPVar (HsIdent "mModeFlag"),HsPVar (HsIdent "units"),HsPVar (HsIdent "errs"),HsPVar (HsIdent "flags'")]) (HsVar (UnQual (HsIdent "getCmdLineState"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 640, srcColumn = 9}) (HsPTuple [HsPVar (HsIdent "modeFlag'"),HsPVar (HsIdent "errs'")]) (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "mModeFlag"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 642, srcColumn = 13}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsTuple [HsTuple [HsVar (UnQual (HsIdent "newMode")),HsVar (UnQual (HsIdent "newFlag"))],HsVar (UnQual (HsIdent "errs"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 643, srcColumn = 13}) (HsPApp (UnQual (HsIdent "Just")) [HsPTuple [HsPVar (HsIdent "oldMode"),HsPVar (HsIdent "oldFlag")]]) (HsUnGuardedAlt (HsCase (HsTuple [HsVar (UnQual (HsIdent "oldMode")),HsVar (UnQual (HsIdent "newMode"))]) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 646, srcColumn = 21}) HsPWildCard (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 646, srcColumn = 23}) (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isStopLnMode"))) (HsVar (UnQual (HsIdent "oldMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoMakeMode"))) (HsVar (UnQual (HsIdent "newMode"))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "isStopLnMode"))) (HsVar (UnQual (HsIdent "newMode"))))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoMakeMode"))) (HsVar (UnQual (HsIdent "oldMode"))))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "doMakeMode")),HsLit (HsString "--make")],HsList []])]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 652, srcColumn = 21}) HsPWildCard (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 652, srcColumn = 23}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isShowGhcUsageMode"))) (HsVar (UnQual (HsIdent "oldMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoInteractiveMode"))) (HsVar (UnQual (HsIdent "newMode"))))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "showGhciUsageMode")),HsVar (UnQual (HsIdent "oldFlag"))],HsList []]),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 655, srcColumn = 23}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isShowGhcUsageMode"))) (HsVar (UnQual (HsIdent "newMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoInteractiveMode"))) (HsVar (UnQual (HsIdent "oldMode"))))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "showGhciUsageMode")),HsVar (UnQual (HsIdent "newFlag"))],HsList []])]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 660, srcColumn = 21}) HsPWildCard (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 660, srcColumn = 23}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isDoEvalMode"))) (HsVar (UnQual (HsIdent "oldMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoInteractiveMode"))) (HsVar (UnQual (HsIdent "newMode"))))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "oldMode")),HsVar (UnQual (HsIdent "oldFlag"))],HsList []]),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 663, srcColumn = 23}) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isDoEvalMode"))) (HsVar (UnQual (HsIdent "newMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsApp (HsVar (UnQual (HsIdent "isDoInteractiveMode"))) (HsVar (UnQual (HsIdent "oldMode"))))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "newMode")),HsVar (UnQual (HsIdent "newFlag"))],HsList []]),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 668, srcColumn = 23}) (HsApp (HsVar (UnQual (HsIdent "isDominantFlag"))) (HsVar (UnQual (HsIdent "oldMode")))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "oldMode")),HsVar (UnQual (HsIdent "oldFlag"))],HsList []]),HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 669, srcColumn = 23}) (HsApp (HsVar (UnQual (HsIdent "isDominantFlag"))) (HsVar (UnQual (HsIdent "newMode")))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "newMode")),HsVar (UnQual (HsIdent "newFlag"))],HsList []])]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 671, srcColumn = 21}) (HsPTuple [HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPVar (HsIdent "esOld")])])],HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "DoEval")) [HsPList [HsPVar (HsIdent "eNew")]])])]]) (HsUnGuardedAlt (HsTuple [HsTuple [HsApp (HsCon (UnQual (HsIdent "Right"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "Right"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "DoEval"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "eNew"))) (HsQConOp (Special HsCons)) (HsVar (UnQual (HsIdent "esOld"))))))))),HsVar (UnQual (HsIdent "oldFlag"))],HsVar (UnQual (HsIdent "errs"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 676, srcColumn = 21}) HsPWildCard (HsGuardedAlts [HsGuardedAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 676, srcColumn = 23}) (HsInfixApp (HsVar (UnQual (HsIdent "oldFlag"))) (HsQVarOp (UnQual (HsSymbol "=="))) (HsVar (UnQual (HsIdent "newFlag")))) (HsTuple [HsTuple [HsVar (UnQual (HsIdent "oldMode")),HsVar (UnQual (HsIdent "oldFlag"))],HsVar (UnQual (HsIdent "errs"))])]) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 679, srcColumn = 21}) (HsPTuple [HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPApp (UnQual (HsIdent "DoInteractive")) []])],HsPApp (UnQual (HsIdent "Left")) [HsPParen (HsPApp (UnQual (HsIdent "ShowOptions")) [HsPWildCard])]]) (HsUnGuardedAlt (HsTuple [HsTuple [HsApp (HsCon (UnQual (HsIdent "Left"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ShowOptions"))) (HsCon (UnQual (HsIdent "True"))))),HsLit (HsString "--interactive --show-options")],HsVar (UnQual (HsIdent "errs"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 682, srcColumn = 21}) (HsPTuple [HsPApp (UnQual (HsIdent "Left")) [HsPParen (HsPApp (UnQual (HsIdent "ShowOptions")) [HsPWildCard])],HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPParen (HsPApp (UnQual (HsIdent "Right")) [HsPApp (UnQual (HsIdent "DoInteractive")) []])])]) (HsUnGuardedAlt (HsTuple [HsTuple [HsApp (HsCon (UnQual (HsIdent "Left"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ShowOptions"))) (HsCon (UnQual (HsIdent "True"))))),HsLit (HsString "--show-options --interactive")],HsVar (UnQual (HsIdent "errs"))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 686, srcColumn = 21}) HsPWildCard (HsUnGuardedAlt (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 686, srcColumn = 30}) (HsPVar (HsIdent "err")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "flagMismatchErr"))) (HsVar (UnQual (HsIdent "oldFlag")))) (HsVar (UnQual (HsIdent "newFlag"))))) []] (HsTuple [HsTuple [HsVar (UnQual (HsIdent "oldMode")),HsVar (UnQual (HsIdent "oldFlag"))],HsInfixApp (HsVar (UnQual (HsIdent "err"))) (HsQConOp (Special HsCons)) (HsVar (UnQual (HsIdent "errs")))]))) []])) []])) []],HsQualifier (HsApp (HsVar (UnQual (HsIdent "putCmdLineState"))) (HsTuple [HsApp (HsCon (UnQual (HsIdent "Just"))) (HsVar (UnQual (HsIdent "modeFlag'"))),HsVar (UnQual (HsIdent "units")),HsVar (UnQual (HsIdent "errs'")),HsVar (UnQual (HsIdent "flags'"))]))]))) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 689, srcColumn = 9}) (HsIdent "isDominantFlag") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isShowGhcUsageMode"))) (HsVar (UnQual (HsIdent "f")))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "isShowGhciUsageMode"))) (HsVar (UnQual (HsIdent "f"))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "isShowVersionMode"))) (HsVar (UnQual (HsIdent "f"))))) (HsQVarOp (UnQual (HsSymbol "||"))) (HsApp (HsVar (UnQual (HsIdent "isShowNumVersionMode"))) (HsVar (UnQual (HsIdent "f")))))) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 694, srcColumn = 1}) [HsIdent "flagMismatchErr"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyCon (UnQual (HsIdent "String")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 695, srcColumn = 1}) (HsIdent "flagMismatchErr") [HsPVar (HsIdent "oldFlag"),HsPVar (HsIdent "newFlag")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsLit (HsString "cannot use `")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "oldFlag")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString "' with `"))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "newFlag")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString "'")))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 698, srcColumn = 1}) [HsIdent "addFlag"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyFun (HsTyCon (UnQual (HsIdent "String"))) (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "EwM"))) (HsTyCon (UnQual (HsIdent "ModeM")))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 699, srcColumn = 1}) (HsIdent "addFlag") [HsPVar (HsIdent "s"),HsPVar (HsIdent "flag")] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "liftEwM"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 700, srcColumn = 25}) (HsPTuple [HsPVar (HsIdent "m"),HsPVar (HsIdent "units"),HsPVar (HsIdent "e"),HsPVar (HsIdent "flags'")]) (HsVar (UnQual (HsIdent "getCmdLineState"))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "putCmdLineState"))) (HsTuple [HsVar (UnQual (HsIdent "m")),HsVar (UnQual (HsIdent "units")),HsVar (UnQual (HsIdent "e")),HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "mkGeneralLocated"))) (HsVar (UnQual (HsIdent "loc")))) (HsVar (UnQual (HsIdent "s")))) (HsQConOp (Special HsCons)) (HsVar (UnQual (HsIdent "flags'")))]))]))) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 702, srcColumn = 11}) (HsPVar (HsIdent "loc")) (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsLit (HsString "addFlag by ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "flag")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString " on the commandline")))) []]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 707, srcColumn = 1}) [HsIdent "doMake"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 708, srcColumn = 1}) (HsIdent "doMake") [HsPVar (HsIdent "units"),HsPVar (HsIdent "targets")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 709, srcColumn = 11}) (HsPVar (HsIdent "hs_srcs")) (HsCase (HsApp (HsVar (Qual (Module "NE") (HsIdent "nonEmpty"))) (HsVar (UnQual (HsIdent "units")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 710, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "ne_units")]) (HsUnGuardedAlt (HsDo [HsQualifier (HsApp (HsVar (UnQual (HsIdent "initMulti"))) (HsVar (UnQual (HsIdent "ne_units"))))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 712, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 713, srcColumn = 9}) (HsPVar (HsIdent "s")) (HsApp (HsVar (UnQual (HsIdent "initMake"))) (HsVar (UnQual (HsIdent "targets")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 714, srcColumn = 22}) [HsPVar (HsIdent "a"),HsPVar (HsIdent "b")] (HsTuple [HsVar (UnQual (HsIdent "a")),HsCon (UnQual (HsIdent "Nothing")),HsVar (UnQual (HsIdent "b"))])))) (HsVar (UnQual (HsIdent "s")))))])) []]),HsQualifier (HsCase (HsVar (UnQual (HsIdent "hs_srcs"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 716, srcColumn = 5}) (HsPList []) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 717, srcColumn = 5}) HsPWildCard (HsUnGuardedAlt (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 718, srcColumn = 16}) (HsPVar (HsIdent "targets'")) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 718, srcColumn = 26}) [HsPTuple [HsPVar (HsIdent "src"),HsPVar (HsIdent "uid"),HsPVar (HsIdent "phase")]] (HsApp (HsApp (HsApp (HsVar (Qual (Module "GHC") (HsIdent "guessTarget"))) (HsVar (UnQual (HsIdent "src")))) (HsVar (UnQual (HsIdent "uid")))) (HsVar (UnQual (HsIdent "phase"))))))) (HsVar (UnQual (HsIdent "hs_srcs")))),HsQualifier (HsApp (HsVar (Qual (Module "GHC") (HsIdent "setTargets"))) (HsVar (UnQual (HsIdent "targets'")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 720, srcColumn = 15}) (HsPVar (HsIdent "ok_flag")) (HsApp (HsVar (Qual (Module "GHC") (HsIdent "load"))) (HsCon (UnQual (HsIdent "LoadAllTargets")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "failed"))) (HsVar (UnQual (HsIdent "ok_flag")))))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "exitWith"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))))))])) []])])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 723, srcColumn = 1}) [HsIdent "initMake"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))]))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 724, srcColumn = 1}) (HsIdent "initMake") [HsPVar (HsIdent "srcs")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 725, srcColumn = 9}) (HsPTuple [HsPVar (HsIdent "hs_srcs"),HsPVar (HsIdent "non_hs_srcs")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "partition"))) (HsVar (UnQual (HsIdent "isHaskellishTarget")))) (HsVar (UnQual (HsIdent "srcs"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 727, srcColumn = 13}) (HsPVar (HsIdent "hsc_env")) (HsVar (Qual (Module "GHC") (HsIdent "getSession"))),HsQualifier (HsIf (HsParen (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "hs_srcs"))))) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "liftIO"))) (HsParen (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "oneShot"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsCon (UnQual (HsIdent "NoStop")))) (HsVar (UnQual (HsIdent "srcs")))))) (HsQVarOp (UnQual (HsSymbol ">>"))) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsList []))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 737, srcColumn = 15}) (HsPVar (HsIdent "o_files")) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapMaybeM"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 737, srcColumn = 30}) [HsPVar (HsIdent "x")] (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "compileFile"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsCon (UnQual (HsIdent "NoStop")))) (HsVar (UnQual (HsIdent "x")))))))) (HsVar (UnQual (HsIdent "non_hs_srcs")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 738, srcColumn = 14}) (HsPVar (HsIdent "dflags")) (HsVar (Qual (Module "GHC") (HsIdent "getSessionDynFlags"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 739, srcColumn = 11}) (HsPVar (HsIdent "dflags'")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "dflags"))) [HsFieldUpdate (UnQual (HsIdent "ldInputs")) (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "FileOption"))) (HsLit (HsString ""))))) (HsVar (UnQual (HsIdent "o_files")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "ldInputs"))) (HsVar (UnQual (HsIdent "dflags")))))])) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 741, srcColumn = 9}) HsPWildCard (HsApp (HsVar (Qual (Module "GHC") (HsIdent "setSessionDynFlags"))) (HsVar (UnQual (HsIdent "dflags'")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "hs_srcs"))))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 745, srcColumn = 1}) [HsIdent "removeRTS"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 746, srcColumn = 1}) (HsIdent "removeRTS") [HsPParen (HsPInfixApp (HsPLit (HsString "+RTS")) (Special HsCons) (HsPVar (HsIdent "xs")))] (HsUnGuardedRhs (HsCase (HsApp (HsApp (HsVar (UnQual (HsIdent "dropWhile"))) (HsRightSection (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsString "-RTS")))) (HsVar (UnQual (HsIdent "xs")))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 748, srcColumn = 5}) (HsPList []) (HsUnGuardedAlt (HsList [])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 749, srcColumn = 5}) (HsPParen (HsPInfixApp HsPWildCard (Special HsCons) (HsPVar (HsIdent "ys")))) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "removeRTS"))) (HsVar (UnQual (HsIdent "ys"))))) []])) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 750, srcColumn = 1}) (HsIdent "removeRTS") [HsPParen (HsPInfixApp (HsPVar (HsIdent "y")) (Special HsCons) (HsPVar (HsIdent "ys")))] (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "y"))) (HsQConOp (Special HsCons)) (HsApp (HsVar (UnQual (HsIdent "removeRTS"))) (HsVar (UnQual (HsIdent "ys")))))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 751, srcColumn = 1}) (HsIdent "removeRTS") [HsPList []] (HsUnGuardedRhs (HsList [])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 753, srcColumn = 1}) [HsIdent "initMulti"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Qual (Module "NE") (HsIdent "NonEmpty"))) (HsTyCon (UnQual (HsIdent "String")))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "UnitId"))),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))]))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 754, srcColumn = 1}) (HsIdent "initMulti") [HsPVar (HsIdent "unitArgsFiles")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 755, srcColumn = 11}) (HsPVar (HsIdent "hsc_env")) (HsVar (Qual (Module "GHC") (HsIdent "getSession"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 756, srcColumn = 7}) (HsPVar (HsIdent "logger")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "hsc_logger"))) (HsVar (UnQual (HsIdent "hsc_env"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 757, srcColumn = 18}) (HsPVar (HsIdent "initial_dflags")) (HsVar (Qual (Module "GHC") (HsIdent "getSessionDynFlags"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 759, srcColumn = 19}) (HsPVar (HsIdent "dynFlagsAndSrcs")) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "forM"))) (HsVar (UnQual (HsIdent "unitArgsFiles")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 759, srcColumn = 44}) [HsPVar (HsIdent "f")] (HsDo [HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "verbosity"))) (HsVar (UnQual (HsIdent "initial_dflags")))) (HsQVarOp (UnQual (HsSymbol ">"))) (HsLit (HsInt 2))))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "print"))) (HsVar (UnQual (HsIdent "f"))))))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 761, srcColumn = 10}) (HsPVar (HsIdent "args")) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "expandResponse"))) (HsList [HsVar (UnQual (HsIdent "f"))]))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 762, srcColumn = 36}) (HsPTuple [HsPVar (HsIdent "dflags2"),HsPVar (HsIdent "fileish_args"),HsPVar (HsIdent "warns")]) (HsApp (HsApp (HsVar (UnQual (HsIdent "parseDynamicFlagsCmdLine"))) (HsVar (UnQual (HsIdent "initial_dflags")))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "mkGeneralLocated"))) (HsVar (UnQual (HsIdent "f")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "removeRTS"))) (HsVar (UnQual (HsIdent "args")))))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "handleSourceError"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 763, srcColumn = 25}) [HsPVar (HsIdent "e")] (HsDo [HsQualifier (HsApp (HsVar (Qual (Module "GHC") (HsIdent "printException"))) (HsVar (UnQual (HsIdent "e")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "exitWith"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))))])))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "handleFlagWarnings"))) (HsVar (UnQual (HsIdent "logger")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "initDiagOpts"))) (HsVar (UnQual (HsIdent "dflags2")))))) (HsVar (UnQual (HsIdent "warns")))))])),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 768, srcColumn = 9}) (HsPTuple [HsPVar (HsIdent "dflags3"),HsPVar (HsIdent "srcs"),HsPVar (HsIdent "objs")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "parseTargetFiles"))) (HsVar (UnQual (HsIdent "dflags2")))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "unLoc")))) (HsVar (UnQual (HsIdent "fileish_args"))))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 769, srcColumn = 9}) (HsPVar (HsIdent "dflags4")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "offsetDynFlags"))) (HsVar (UnQual (HsIdent "dflags3"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 771, srcColumn = 9}) (HsPTuple [HsPVar (HsIdent "hs_srcs"),HsPVar (HsIdent "non_hs_srcs")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "partition"))) (HsVar (UnQual (HsIdent "isHaskellishTarget")))) (HsVar (UnQual (HsIdent "srcs"))))) []],HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 775, srcColumn = 9}) (HsPVar (HsIdent "dubious_hsc_env")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "hscSetFlags"))) (HsVar (UnQual (HsIdent "dflags4")))) (HsVar (UnQual (HsIdent "hsc_env"))))) []],HsQualifier (HsIf (HsParen (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "hs_srcs"))))) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "liftIO"))) (HsParen (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "oneShot"))) (HsVar (UnQual (HsIdent "dubious_hsc_env")))) (HsCon (UnQual (HsIdent "NoStop")))) (HsVar (UnQual (HsIdent "srcs")))))) (HsQVarOp (UnQual (HsSymbol ">>"))) (HsApp (HsVar (UnQual (HsIdent "return"))) (HsTuple [HsVar (UnQual (HsIdent "dflags4")),HsList []]))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 784, srcColumn = 15}) (HsPVar (HsIdent "o_files")) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapMaybeM"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 784, srcColumn = 30}) [HsPVar (HsIdent "x")] (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "compileFile"))) (HsVar (UnQual (HsIdent "dubious_hsc_env")))) (HsCon (UnQual (HsIdent "NoStop")))) (HsVar (UnQual (HsIdent "x")))))))) (HsVar (UnQual (HsIdent "non_hs_srcs")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 786, srcColumn = 11}) (HsPVar (HsIdent "dflags5")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "dflags4"))) [HsFieldUpdate (UnQual (HsIdent "ldInputs")) (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "FileOption"))) (HsLit (HsString ""))))) (HsVar (UnQual (HsIdent "o_files")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "ldInputs"))) (HsVar (UnQual (HsIdent "dflags4")))))])) []],HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "checkOptions"))) (HsCon (UnQual (HsIdent "DoMake")))) (HsVar (UnQual (HsIdent "dflags5")))) (HsVar (UnQual (HsIdent "srcs")))) (HsVar (UnQual (HsIdent "objs")))) (HsList []))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "pure"))) (HsTuple [HsVar (UnQual (HsIdent "dflags5")),HsVar (UnQual (HsIdent "hs_srcs"))]))]))]))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 794, srcColumn = 5}) (HsPVar (HsIdent "unitDflags")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (Qual (Module "NE") (HsIdent "map"))) (HsVar (UnQual (HsIdent "fst")))) (HsVar (UnQual (HsIdent "dynFlagsAndSrcs"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 795, srcColumn = 5}) (HsPVar (HsIdent "srcs")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (Qual (Module "NE") (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 795, srcColumn = 21}) [HsPTuple [HsPVar (HsIdent "dflags"),HsPVar (HsIdent "lsrcs")]] (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 795, srcColumn = 46}) [HsPVar (HsIdent "a"),HsPVar (HsIdent "b")] (HsTuple [HsVar (UnQual (HsIdent "a")),HsInfixApp (HsCon (UnQual (HsIdent "Just"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "homeUnitId_"))) (HsVar (UnQual (HsIdent "dflags")))),HsVar (UnQual (HsIdent "b"))])))) (HsVar (UnQual (HsIdent "lsrcs"))))))) (HsVar (UnQual (HsIdent "dynFlagsAndSrcs"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 796, srcColumn = 5}) (HsPTuple [HsPVar (HsIdent "hs_srcs"),HsPVar (HsIdent "_non_hs_srcs")]) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "unzip"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "partition"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 796, srcColumn = 55}) [HsPTuple [HsPVar (HsIdent "file"),HsPVar (HsIdent "_uid"),HsPVar (HsIdent "phase")]] (HsApp (HsVar (UnQual (HsIdent "isHaskellishTarget"))) (HsTuple [HsVar (UnQual (HsIdent "file")),HsVar (UnQual (HsIdent "phase"))]))))))) (HsParen (HsApp (HsVar (Qual (Module "NE") (HsIdent "toList"))) (HsVar (UnQual (HsIdent "srcs"))))))))) []],HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "checkDuplicateUnits"))) (HsVar (UnQual (HsIdent "initial_dflags")))) (HsParen (HsApp (HsVar (Qual (Module "NE") (HsIdent "toList"))) (HsParen (HsApp (HsApp (HsVar (Qual (Module "NE") (HsIdent "zip"))) (HsVar (UnQual (HsIdent "unitArgsFiles")))) (HsVar (UnQual (HsIdent "unitDflags")))))))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 800, srcColumn = 7}) (HsPTuple [HsPVar (HsIdent "initial_home_graph"),HsPVar (HsIdent "mainUnitId")]) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "createUnitEnvFromFlags"))) (HsVar (UnQual (HsIdent "unitDflags"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 801, srcColumn = 7}) (HsPVar (HsIdent "home_units")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "unitEnv_keys"))) (HsVar (UnQual (HsIdent "initial_home_graph"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 803, srcColumn = 19}) (HsPVar (HsIdent "home_unit_graph")) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "forM"))) (HsVar (UnQual (HsIdent "initial_home_graph")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 803, srcColumn = 49}) [HsPVar (HsIdent "homeUnitEnv")] (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 804, srcColumn = 9}) (HsPVar (HsIdent "cached_unit_dbs")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "homeUnitEnv_unit_dbs"))) (HsVar (UnQual (HsIdent "homeUnitEnv"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 805, srcColumn = 9}) (HsPVar (HsIdent "hue_flags")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "homeUnitEnv_dflags"))) (HsVar (UnQual (HsIdent "homeUnitEnv"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 806, srcColumn = 9}) (HsPVar (HsIdent "dflags")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "homeUnitEnv_dflags"))) (HsVar (UnQual (HsIdent "homeUnitEnv"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 807, srcColumn = 43}) (HsPTuple [HsPVar (HsIdent "dbs"),HsPVar (HsIdent "unit_state"),HsPVar (HsIdent "home_unit"),HsPVar (HsIdent "mconstants")]) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsVar (Qual (Module "State") (HsIdent "initUnits"))) (HsVar (UnQual (HsIdent "logger")))) (HsVar (UnQual (HsIdent "hue_flags")))) (HsVar (UnQual (HsIdent "cached_unit_dbs")))) (HsVar (UnQual (HsIdent "home_units"))))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 809, srcColumn = 20}) (HsPVar (HsIdent "updated_dflags")) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "updatePlatformConstants"))) (HsVar (UnQual (HsIdent "dflags")))) (HsVar (UnQual (HsIdent "mconstants"))))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "pure"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsRecConstr (UnQual (HsIdent "HomeUnitEnv")) [HsFieldUpdate (UnQual (HsIdent "homeUnitEnv_units")) (HsVar (UnQual (HsIdent "unit_state"))),HsFieldUpdate (UnQual (HsIdent "homeUnitEnv_unit_dbs")) (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsVar (UnQual (HsIdent "dbs")))),HsFieldUpdate (UnQual (HsIdent "homeUnitEnv_dflags")) (HsVar (UnQual (HsIdent "updated_dflags"))),HsFieldUpdate (UnQual (HsIdent "homeUnitEnv_hpt")) (HsVar (UnQual (HsIdent "emptyHomePackageTable"))),HsFieldUpdate (UnQual (HsIdent "homeUnitEnv_home_unit")) (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsVar (UnQual (HsIdent "home_unit"))))]))]))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "checkUnitCycles"))) (HsVar (UnQual (HsIdent "initial_dflags")))) (HsVar (UnQual (HsIdent "home_unit_graph")))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 820, srcColumn = 7}) (HsPVar (HsIdent "dflags")) (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "homeUnitEnv_dflags"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "unitEnv_lookup"))) (HsVar (UnQual (HsIdent "mainUnitId")))) (HsVar (UnQual (HsIdent "home_unit_graph")))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 821, srcColumn = 11}) (HsPVar (HsIdent "unitEnv")) (HsInfixApp (HsVar (UnQual (HsIdent "assertUnitEnvInvariant"))) (HsQVarOp (UnQual (HsSymbol "<$>"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "initUnitEnv"))) (HsVar (UnQual (HsIdent "mainUnitId")))) (HsVar (UnQual (HsIdent "home_unit_graph")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "ghcNameVersion"))) (HsVar (UnQual (HsIdent "dflags")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "targetPlatform"))) (HsVar (UnQual (HsIdent "dflags"))))))))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 822, srcColumn = 7}) (HsPVar (HsIdent "final_hsc_env")) (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "hsc_env"))) [HsFieldUpdate (UnQual (HsIdent "hsc_unit_env")) (HsVar (UnQual (HsIdent "unitEnv")))])) []],HsQualifier (HsApp (HsVar (Qual (Module "GHC") (HsIdent "setSession"))) (HsVar (UnQual (HsIdent "final_hsc_env")))),HsQualifier (HsIf (HsParen (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "hs_srcs"))))) (HsDo [HsQualifier (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "Multi Mode can not be used for one-shot mode."))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "exitWith"))) (HsParen (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))))]) (HsDo [HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "return"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "concat"))) (HsVar (UnQual (HsIdent "hs_srcs")))))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 851, srcColumn = 1}) [HsIdent "checkUnitCycles"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyFun (HsTyApp (HsTyCon (UnQual (HsIdent "UnitEnvGraph"))) (HsTyCon (UnQual (HsIdent "HomeUnitEnv")))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 852, srcColumn = 1}) (HsIdent "checkUnitCycles") [HsPVar (HsIdent "dflags"),HsPVar (HsIdent "graph")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "processSCCs"))) (HsVar (UnQual (HsIdent "sccs"))))) [HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 854, srcColumn = 5}) [HsIdent "mkNode"] (HsQualType [] (HsTyFun (HsTyTuple [HsTyCon (UnQual (HsIdent "UnitId")),HsTyCon (UnQual (HsIdent "HomeUnitEnv"))]) (HsTyApp (HsTyApp (HsTyCon (UnQual (HsIdent "Node"))) (HsTyCon (UnQual (HsIdent "UnitId")))) (HsTyCon (UnQual (HsIdent "UnitId")))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 855, srcColumn = 5}) (HsIdent "mkNode") [HsPTuple [HsPVar (HsIdent "uid"),HsPVar (HsIdent "hue")]] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsCon (UnQual (HsIdent "DigraphNode"))) (HsVar (UnQual (HsIdent "uid")))) (HsVar (UnQual (HsIdent "uid")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "homeUnitDepends"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "homeUnitEnv_units"))) (HsVar (UnQual (HsIdent "hue"))))))))) []],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 856, srcColumn = 5}) (HsPVar (HsIdent "nodes")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "mkNode")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "unitEnv_elts"))) (HsVar (UnQual (HsIdent "graph"))))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 858, srcColumn = 5}) (HsPVar (HsIdent "sccs")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "stronglyConnCompFromEdgedVerticesOrd"))) (HsVar (UnQual (HsIdent "nodes"))))) [],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 860, srcColumn = 5}) (HsIdent "processSCCs") [HsPList []] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 861, srcColumn = 5}) (HsIdent "processSCCs") [HsPParen (HsPInfixApp (HsPApp (UnQual (HsIdent "AcyclicSCC")) [HsPWildCard]) (Special HsCons) (HsPVar (HsIdent "other_sccs")))] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "processSCCs"))) (HsVar (UnQual (HsIdent "other_sccs"))))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 862, srcColumn = 5}) (HsIdent "processSCCs") [HsPParen (HsPInfixApp (HsPApp (UnQual (HsIdent "CyclicSCC")) [HsPVar (HsIdent "uids")]) (Special HsCons) HsPWildCard)] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "CmdLineError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "showSDoc"))) (HsVar (UnQual (HsIdent "dflags")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "cycle_err"))) (HsVar (UnQual (HsIdent "uids")))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 865, srcColumn = 5}) (HsIdent "cycle_err") [HsPVar (HsIdent "uids")] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "hang"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "Units form a dependency cycle:"))))) (HsLit (HsInt 2))) (HsParen (HsApp (HsVar (UnQual (HsIdent "one_err"))) (HsVar (UnQual (HsIdent "uids"))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 870, srcColumn = 5}) (HsIdent "one_err") [HsPVar (HsIdent "uids")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "vcat"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 871, srcColumn = 28}) [HsPVar (HsIdent "uid")] (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "-"))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "ppr"))) (HsVar (UnQual (HsIdent "uid"))))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "depends on"))))))) (HsVar (UnQual (HsIdent "start")))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsList [HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "-"))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "ppr"))) (HsVar (UnQual (HsIdent "final"))))]))) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 874, srcColumn = 9}) (HsPVar (HsIdent "start")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "init"))) (HsVar (UnQual (HsIdent "uids"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 875, srcColumn = 9}) (HsPVar (HsIdent "final")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "last"))) (HsVar (UnQual (HsIdent "uids"))))) []]]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 877, srcColumn = 1}) [HsIdent "checkDuplicateUnits"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "FilePath")),HsTyCon (UnQual (HsIdent "DynFlags"))])) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 878, srcColumn = 1}) (HsIdent "checkDuplicateUnits") [HsPVar (HsIdent "dflags"),HsPVar (HsIdent "flags")] (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "unless"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "null"))) (HsVar (UnQual (HsIdent "duplicate_ids")))))) (HsParen (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "CmdLineError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "showSDoc"))) (HsVar (UnQual (HsIdent "dflags")))) (HsVar (UnQual (HsIdent "multi_err")))))))) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 883, srcColumn = 5}) (HsPVar (HsIdent "uids")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "second"))) (HsVar (UnQual (HsIdent "homeUnitId_")))))) (HsVar (UnQual (HsIdent "flags"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 884, srcColumn = 5}) (HsPVar (HsIdent "deduplicated_uids")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "ordNubOn"))) (HsVar (UnQual (HsIdent "snd")))) (HsVar (UnQual (HsIdent "uids"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 885, srcColumn = 5}) (HsPVar (HsIdent "duplicate_ids")) (HsUnGuardedRhs (HsApp (HsVar (Qual (Module "Set") (HsIdent "fromList"))) (HsParen (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "snd")))) (HsVar (UnQual (HsIdent "uids")))) (HsQVarOp (UnQual (HsSymbol "\\\\"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "snd")))) (HsVar (UnQual (HsIdent "deduplicated_uids")))))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 887, srcColumn = 5}) (HsPVar (HsIdent "duplicate_flags")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "filter"))) (HsParen (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "flip"))) (HsVar (Qual (Module "Set") (HsIdent "member")))) (HsVar (UnQual (HsIdent "duplicate_ids")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "snd")))))) (HsVar (UnQual (HsIdent "uids"))))) [],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 889, srcColumn = 5}) (HsIdent "one_err") [HsPTuple [HsPVar (HsIdent "fp"),HsPVar (HsIdent "home_uid")]] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "-"))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "ppr"))) (HsVar (UnQual (HsIdent "home_uid"))))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "defined in")))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "text"))) (HsVar (UnQual (HsIdent "fp")))))) []],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 891, srcColumn = 5}) (HsPVar (HsIdent "multi_err")) (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "hang"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "Multiple units with the same unit-id:"))))) (HsLit (HsInt 2))) (HsParen (HsApp (HsVar (UnQual (HsIdent "vcat"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "one_err")))) (HsVar (UnQual (HsIdent "duplicate_flags"))))))))) []]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 897, srcColumn = 1}) [HsIdent "offsetDynFlags"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyCon (UnQual (HsIdent "DynFlags"))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 898, srcColumn = 1}) (HsIdent "offsetDynFlags") [HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsRecUpdate (HsVar (UnQual (HsIdent "dflags"))) [HsFieldUpdate (UnQual (HsIdent "hiDir")) (HsApp (HsVar (UnQual (HsIdent "c"))) (HsVar (UnQual (HsIdent "hiDir")))),HsFieldUpdate (UnQual (HsIdent "objectDir")) (HsApp (HsVar (UnQual (HsIdent "c"))) (HsVar (UnQual (HsIdent "objectDir")))),HsFieldUpdate (UnQual (HsIdent "stubDir")) (HsApp (HsVar (UnQual (HsIdent "c"))) (HsVar (UnQual (HsIdent "stubDir")))),HsFieldUpdate (UnQual (HsIdent "hieDir")) (HsApp (HsVar (UnQual (HsIdent "c"))) (HsVar (UnQual (HsIdent "hieDir")))),HsFieldUpdate (UnQual (HsIdent "dumpDir")) (HsApp (HsVar (UnQual (HsIdent "c"))) (HsVar (UnQual (HsIdent "dumpDir"))))])) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 906, srcColumn = 5}) (HsIdent "c") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "augment_maybe"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "f"))) (HsVar (UnQual (HsIdent "dflags"))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 908, srcColumn = 5}) (HsIdent "augment_maybe") [HsPApp (UnQual (HsIdent "Nothing")) []] (HsUnGuardedRhs (HsCon (UnQual (HsIdent "Nothing")))) [],HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 909, srcColumn = 5}) (HsIdent "augment_maybe") [HsPParen (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "f")])] (HsUnGuardedRhs (HsApp (HsCon (UnQual (HsIdent "Just"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "augment"))) (HsVar (UnQual (HsIdent "f"))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 910, srcColumn = 5}) (HsIdent "augment") [HsPVar (HsIdent "f")] (HsGuardedRhss [HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 910, srcColumn = 15}) (HsApp (HsVar (UnQual (HsIdent "isRelative"))) (HsVar (UnQual (HsIdent "f")))) (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 910, srcColumn = 37}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "offset")]) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "workingDirectory"))) (HsVar (UnQual (HsIdent "dflags"))))) []] (HsInfixApp (HsVar (UnQual (HsIdent "offset"))) (HsQVarOp (UnQual (HsSymbol "</>"))) (HsVar (UnQual (HsIdent "f"))))),HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 912, srcColumn = 15}) (HsVar (UnQual (HsIdent "otherwise"))) (HsVar (UnQual (HsIdent "f")))]) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 915, srcColumn = 1}) [HsIdent "createUnitEnvFromFlags"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Qual (Module "NE") (HsIdent "NonEmpty"))) (HsTyCon (UnQual (HsIdent "DynFlags")))) (HsTyTuple [HsTyCon (UnQual (HsIdent "HomeUnitGraph")),HsTyCon (UnQual (HsIdent "UnitId"))]))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 916, srcColumn = 1}) (HsIdent "createUnitEnvFromFlags") [HsPVar (HsIdent "unitDflags")] (HsUnGuardedRhs (HsLet [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 918, srcColumn = 5}) (HsIdent "newInternalUnitEnv") [HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "mkHomeUnitEnv"))) (HsVar (UnQual (HsIdent "dflags")))) (HsVar (UnQual (HsIdent "emptyHomePackageTable")))) (HsCon (UnQual (HsIdent "Nothing"))))) []],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 919, srcColumn = 5}) (HsPVar (HsIdent "unitEnvList")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (Qual (Module "NE") (HsIdent "map"))) (HsParen (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 919, srcColumn = 28}) [HsPVar (HsIdent "dflags")] (HsTuple [HsApp (HsVar (UnQual (HsIdent "homeUnitId_"))) (HsVar (UnQual (HsIdent "dflags"))),HsApp (HsVar (UnQual (HsIdent "newInternalUnitEnv"))) (HsVar (UnQual (HsIdent "dflags")))])))) (HsVar (UnQual (HsIdent "unitDflags"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 920, srcColumn = 5}) (HsPVar (HsIdent "activeUnit")) (HsUnGuardedRhs (HsInfixApp (HsVar (UnQual (HsIdent "fst"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (Qual (Module "NE") (HsIdent "head"))) (HsVar (UnQual (HsIdent "unitEnvList")))))) []] (HsTuple [HsApp (HsVar (UnQual (HsIdent "unitEnv_new"))) (HsParen (HsApp (HsVar (Qual (Module "Map") (HsIdent "fromList"))) (HsParen (HsApp (HsVar (Qual (Module "NE") (HsIdent "toList"))) (HsParen (HsVar (UnQual (HsIdent "unitEnvList")))))))),HsVar (UnQual (HsIdent "activeUnit"))]))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 927, srcColumn = 1}) [HsIdent "showBanner"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "PostLoadMode"))) (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 928, srcColumn = 1}) (HsIdent "showBanner") [HsPVar (HsIdent "_postLoadMode"),HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 929, srcColumn = 8}) (HsPVar (HsIdent "verb")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "verbosity"))) (HsVar (UnQual (HsIdent "dflags"))))) []],HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "isInteractiveMode"))) (HsVar (UnQual (HsIdent "_postLoadMode")))) (HsQVarOp (UnQual (HsSymbol "&&"))) (HsVar (UnQual (HsIdent "verb")))) (HsQVarOp (UnQual (HsSymbol ">="))) (HsLit (HsInt 1))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsVar (UnQual (HsIdent "ghciWelcomeMsg"))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "verb"))) (HsQVarOp (UnQual (HsSymbol ">="))) (HsLit (HsInt 2))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStr"))) (HsVar (UnQual (HsIdent "stderr")))) (HsLit (HsString "Glasgow Haskell Compiler, Version "))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStr"))) (HsVar (UnQual (HsIdent "stderr")))) (HsVar (UnQual (HsIdent "cProjectVersion")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStr"))) (HsVar (UnQual (HsIdent "stderr")))) (HsLit (HsString ", stage "))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStr"))) (HsVar (UnQual (HsIdent "stderr")))) (HsVar (UnQual (HsIdent "cStage")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStr"))) (HsVar (UnQual (HsIdent "stderr")))) (HsLit (HsString " booted by GHC version "))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsVar (UnQual (HsIdent "cBooterVersion"))))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 946, srcColumn = 1}) [HsIdent "showInfo"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 947, srcColumn = 1}) (HsIdent "showInfo") [HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 948, srcColumn = 13}) (HsIdent "sq") [HsPVar (HsIdent "x")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsLit (HsString " [")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "x")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString "\n ]")))) []]],HsQualifier (HsInfixApp (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "sq")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "intercalate"))) (HsLit (HsString "\n ,")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "show"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "compilerInfo"))) (HsVar (UnQual (HsIdent "dflags")))))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 952, srcColumn = 1}) [HsIdent "showSupportedExtensions"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "String")))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 953, srcColumn = 1}) (HsIdent "showSupportedExtensions") [HsPVar (HsIdent "m_top_dir")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 954, srcColumn = 7}) (HsPVar (HsIdent "res")) (HsInfixApp (HsVar (UnQual (HsIdent "runExceptT"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 955, srcColumn = 13}) (HsPVar (HsIdent "top_dir")) (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "lift"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "tryFindTopDir"))) (HsVar (UnQual (HsIdent "m_top_dir")))))) (HsQVarOp (UnQual (HsSymbol ">>="))) (HsLambda (SrcLoc {srcFilename = "<unknown>", srcLine = 955, srcColumn = 52}) [HsPVar (HsIdent "_a")] (HsCase (HsVar (UnQual (HsIdent "_a"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 956, srcColumn = 7}) (HsPApp (UnQual (HsIdent "Nothing")) []) (HsUnGuardedAlt (HsInfixApp (HsVar (UnQual (HsIdent "throwE"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsCon (UnQual (HsIdent "SettingsError_MissingData"))) (HsLit (HsString "Could not find the top directory, missing -B flag"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 957, srcColumn = 7}) (HsPApp (UnQual (HsIdent "Just")) [HsPVar (HsIdent "dir")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "pure"))) (HsVar (UnQual (HsIdent "dir"))))) []]))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "initSettings"))) (HsVar (UnQual (HsIdent "top_dir"))))])),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 959, srcColumn = 11}) (HsPVar (HsIdent "arch_os")) (HsCase (HsVar (UnQual (HsIdent "res"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 960, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Right")) [HsPVar (HsIdent "s")]) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "pure"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsVar (UnQual (HsIdent "platformArchOS")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "sTargetPlatform"))) (HsVar (UnQual (HsIdent "s")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 961, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Left")) [HsPParen (HsPApp (UnQual (HsIdent "SettingsError_MissingData")) [HsPVar (HsIdent "msg")])]) (HsUnGuardedAlt (HsDo [HsQualifier (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "WARNING: "))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "show"))) (HsVar (UnQual (HsIdent "msg"))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsLit (HsString "cannot know target platform so guessing target == host (native compiler)."))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "pure"))) (HsVar (UnQual (HsIdent "hostPlatformArchOS"))))])) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 965, srcColumn = 5}) (HsPApp (UnQual (HsIdent "Left")) [HsPParen (HsPApp (UnQual (HsIdent "SettingsError_BadData")) [HsPVar (HsIdent "msg")])]) (HsUnGuardedAlt (HsDo [HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "hPutStrLn"))) (HsVar (UnQual (HsIdent "stderr")))) (HsVar (UnQual (HsIdent "msg")))),HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "exitWith"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsCon (UnQual (HsIdent "ExitFailure"))) (HsLit (HsInt 1))))])) []]),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "mapM_"))) (HsVar (UnQual (HsIdent "putStrLn")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "supportedLanguagesAndExtensions"))) (HsVar (UnQual (HsIdent "arch_os")))))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 970, srcColumn = 1}) [HsIdent "showVersion"] (HsQualType [] (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon)))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 971, srcColumn = 1}) (HsPVar (HsIdent "showVersion")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsParen (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "cProjectName"))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString ", version "))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "cProjectVersion"))))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 973, srcColumn = 1}) [HsIdent "showOptions"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Bool"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 974, srcColumn = 1}) (HsIdent "showOptions") [HsPVar (HsIdent "isInteractive")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "putStr"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "unlines"))) (HsVar (UnQual (HsIdent "availableOptions"))))))) [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 976, srcColumn = 7}) (HsPVar (HsIdent "availableOptions")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "concat"))) (HsList [HsApp (HsVar (UnQual (HsIdent "flagsForCompletion"))) (HsVar (UnQual (HsIdent "isInteractive"))),HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsLeftSection (HsLit (HsChar '-')) (HsQConOp (Special HsCons)))) (HsParen (HsApp (HsVar (UnQual (HsIdent "getFlagNames"))) (HsVar (UnQual (HsIdent "mode_flags")))))]))) [],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 980, srcColumn = 7}) (HsIdent "getFlagNames") [HsPVar (HsIdent "opts")] (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "flagName")))) (HsVar (UnQual (HsIdent "opts"))))) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 982, srcColumn = 1}) [HsIdent "showGhcUsage"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 983, srcColumn = 1}) (HsPVar (HsIdent "showGhcUsage")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "showUsage"))) (HsCon (UnQual (HsIdent "False"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 985, srcColumn = 1}) [HsIdent "showGhciUsage"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 986, srcColumn = 1}) (HsPVar (HsIdent "showGhciUsage")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "showUsage"))) (HsCon (UnQual (HsIdent "True"))))) [],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 988, srcColumn = 1}) [HsIdent "showUsage"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Bool"))) (HsTyFun (HsTyCon (UnQual (HsIdent "DynFlags"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 989, srcColumn = 1}) (HsIdent "showUsage") [HsPVar (HsIdent "ghci"),HsPVar (HsIdent "dflags")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 990, srcColumn = 7}) (HsPVar (HsIdent "usage_path")) (HsUnGuardedRhs (HsIf (HsVar (UnQual (HsIdent "ghci"))) (HsApp (HsVar (UnQual (HsIdent "ghciUsagePath"))) (HsVar (UnQual (HsIdent "dflags")))) (HsApp (HsVar (UnQual (HsIdent "ghcUsagePath"))) (HsVar (UnQual (HsIdent "dflags")))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 992, srcColumn = 9}) (HsPVar (HsIdent "usage")) (HsApp (HsVar (UnQual (HsIdent "readFile"))) (HsVar (UnQual (HsIdent "usage_path")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 993, srcColumn = 12}) (HsPVar (HsIdent "progName")) (HsVar (UnQual (HsIdent "getProgName"))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "dump"))) (HsVar (UnQual (HsIdent "progName")))) (HsVar (UnQual (HsIdent "usage"))))])) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 996, srcColumn = 5}) (HsIdent "dump") [HsPVar (HsIdent "progName"),HsPVar (HsIdent "xs")] (HsUnGuardedRhs (HsCase (HsVar (UnQual (HsIdent "xs"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 997, srcColumn = 7}) (HsPLit (HsString "")) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsCon (Special HsUnitCon)))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 998, srcColumn = 7}) (HsPInfixApp (HsPInfixApp (HsPLit (HsChar '$')) (Special HsCons) (HsPLit (HsChar '$'))) (Special HsCons) (HsPVar (HsIdent "s"))) (HsUnGuardedAlt (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "putStr"))) (HsVar (UnQual (HsIdent "progName")))) (HsQVarOp (UnQual (HsSymbol ">>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "dump"))) (HsVar (UnQual (HsIdent "progName")))) (HsVar (UnQual (HsIdent "s")))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 999, srcColumn = 7}) (HsPInfixApp (HsPVar (HsIdent "c")) (Special HsCons) (HsPVar (HsIdent "s"))) (HsUnGuardedAlt (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "putChar"))) (HsVar (UnQual (HsIdent "c")))) (HsQVarOp (UnQual (HsSymbol ">>"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "dump"))) (HsVar (UnQual (HsIdent "progName")))) (HsVar (UnQual (HsIdent "s")))))) []])) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1001, srcColumn = 1}) [HsIdent "dumpFinalStats"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Logger"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1002, srcColumn = 1}) (HsIdent "dumpFinalStats") [HsPVar (HsIdent "logger")] (HsUnGuardedRhs (HsDo [HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "logHasDumpFlag"))) (HsVar (UnQual (HsIdent "logger")))) (HsCon (UnQual (HsIdent "Opt_D_faststring_stats")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "dumpFastStringStats"))) (HsVar (UnQual (HsIdent "logger"))))),HsQualifier (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "when"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "logHasDumpFlag"))) (HsVar (UnQual (HsIdent "logger")))) (HsCon (UnQual (HsIdent "Opt_D_dump_faststrings")))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1006, srcColumn = 9}) (HsPVar (HsIdent "fss")) (HsVar (UnQual (HsIdent "getFastStringTable"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1007, srcColumn = 9}) (HsPVar (HsIdent "ppr_table")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "fmap"))) (HsVar (UnQual (HsIdent "ppr_segment")))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "fss"))) (HsQVarOp (UnQual (HsIdent "zip"))) (HsEnumFrom (HsLit (HsInt 0))))))) [],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1008, srcColumn = 9}) (HsIdent "ppr_segment") [HsPTuple [HsPVar (HsIdent "s"),HsPVar (HsIdent "n")]] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "hang"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "Segment"))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsVar (UnQual (HsIdent "n"))))))) (HsLit (HsInt 2))) (HsParen (HsApp (HsVar (UnQual (HsIdent "vcat"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "fmap"))) (HsVar (UnQual (HsIdent "ppr_bucket")))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "s"))) (HsQVarOp (UnQual (HsIdent "zip"))) (HsEnumFrom (HsLit (HsInt 0))))))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1009, srcColumn = 9}) (HsIdent "ppr_bucket") [HsPTuple [HsPVar (HsIdent "b"),HsPVar (HsIdent "n")]] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "hang"))) (HsParen (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "Bucket"))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsVar (UnQual (HsIdent "n"))))))) (HsLit (HsInt 2))) (HsParen (HsApp (HsVar (UnQual (HsIdent "vcat"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "fmap"))) (HsVar (UnQual (HsIdent "ftext")))) (HsVar (UnQual (HsIdent "b"))))))))) []]],HsQualifier (HsApp (HsApp (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "putDumpFileMaybe"))) (HsVar (UnQual (HsIdent "logger")))) (HsCon (UnQual (HsIdent "Opt_D_dump_faststrings")))) (HsLit (HsString "FastStrings"))) (HsCon (UnQual (HsIdent "FormatText")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "vcat"))) (HsVar (UnQual (HsIdent "ppr_table"))))))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1012, srcColumn = 1}) [HsIdent "dumpFastStringStats"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "Logger"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1013, srcColumn = 1}) (HsIdent "dumpFastStringStats") [HsPVar (HsIdent "logger")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1014, srcColumn = 12}) (HsPVar (HsIdent "segments")) (HsVar (UnQual (HsIdent "getFastStringTable"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1015, srcColumn = 8}) (HsPVar (HsIdent "hasZ")) (HsVar (UnQual (HsIdent "getFastStringZEncCounter"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1016, srcColumn = 7}) (HsPVar (HsIdent "buckets")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "concat"))) (HsVar (UnQual (HsIdent "segments"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1017, srcColumn = 7}) (HsPVar (HsIdent "bucketsPerSegment")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "length")))) (HsVar (UnQual (HsIdent "segments"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1018, srcColumn = 7}) (HsPVar (HsIdent "entriesPerBucket")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsVar (UnQual (HsIdent "length")))) (HsVar (UnQual (HsIdent "buckets"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1019, srcColumn = 7}) (HsPVar (HsIdent "entries")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "sum"))) (HsVar (UnQual (HsIdent "entriesPerBucket"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1020, srcColumn = 7}) (HsPVar (HsIdent "msg")) (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "FastString stats:"))) (HsQVarOp (UnQual (HsSymbol "$$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "nest"))) (HsLit (HsInt 4))) (HsParen (HsApp (HsVar (UnQual (HsIdent "vcat"))) (HsList [HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "segments:         "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "length"))) (HsVar (UnQual (HsIdent "segments")))))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "buckets:          "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "sum"))) (HsVar (UnQual (HsIdent "bucketsPerSegment")))))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "entries:          "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsVar (UnQual (HsIdent "entries")))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "largest segment:  "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "maximum"))) (HsVar (UnQual (HsIdent "bucketsPerSegment")))))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "smallest segment: "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "minimum"))) (HsVar (UnQual (HsIdent "bucketsPerSegment")))))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "longest bucket:   "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "maximum"))) (HsVar (UnQual (HsIdent "entriesPerBucket")))))),HsInfixApp (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "has z-encoding:   "))) (HsQVarOp (UnQual (HsSymbol "<+>"))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "hasZ"))) (HsQVarOp (UnQual (HsIdent "pcntOf"))) (HsVar (UnQual (HsIdent "entries")))))])))))) []],HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "putMsg"))) (HsVar (UnQual (HsIdent "logger")))) (HsVar (UnQual (HsIdent "msg"))))])) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1036, srcColumn = 4}) (HsIdent "pcntOf") [HsPVar (HsIdent "x"),HsPVar (HsIdent "y")] (HsUnGuardedRhs (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "int"))) (HsParen (HsInfixApp (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "x"))) (HsQVarOp (UnQual (HsSymbol "*"))) (HsLit (HsInt 100)))) (HsQVarOp (UnQual (HsIdent "quot"))) (HsVar (UnQual (HsIdent "y")))))) (HsQVarOp (Qual (Module "Outputable") (HsSymbol "<>"))) (HsApp (HsVar (UnQual (HsIdent "char"))) (HsLit (HsChar '%'))))) []]]],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1038, srcColumn = 1}) [HsIdent "showUnits",HsIdent "dumpUnits",HsIdent "dumpUnitsSimple"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "HscEnv"))) (HsTyApp (HsTyCon (UnQual (HsIdent "IO"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1039, srcColumn = 1}) (HsIdent "showUnits") [HsPVar (HsIdent "hsc_env")] (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "showSDoc"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_dflags"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "pprUnits"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_units"))) (HsVar (UnQual (HsIdent "hsc_env"))))))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1040, srcColumn = 1}) (HsIdent "dumpUnits") [HsPVar (HsIdent "hsc_env")] (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "putMsg"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_logger"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "pprUnits"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_units"))) (HsVar (UnQual (HsIdent "hsc_env"))))))))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1041, srcColumn = 1}) (HsIdent "dumpUnitsSimple") [HsPVar (HsIdent "hsc_env")] (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "putMsg"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_logger"))) (HsVar (UnQual (HsIdent "hsc_env")))))) (HsParen (HsApp (HsVar (UnQual (HsIdent "pprUnitsSimple"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_units"))) (HsVar (UnQual (HsIdent "hsc_env"))))))))) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1046, srcColumn = 1}) [HsIdent "doFrontend"] (HsQualType [] (HsTyFun (HsTyCon (UnQual (HsIdent "ModuleName"))) (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyTuple [HsTyCon (UnQual (HsIdent "String")),HsTyApp (HsTyCon (UnQual (HsIdent "Maybe"))) (HsTyCon (UnQual (HsIdent "Phase")))])) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon)))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1047, srcColumn = 1}) (HsIdent "doFrontend") [HsPVar (HsIdent "modname"),HsPVar (HsIdent "srcs")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1048, srcColumn = 13}) (HsPVar (HsIdent "hsc_env")) (HsVar (UnQual (HsIdent "getSession"))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1049, srcColumn = 37}) (HsPTuple [HsPVar (HsIdent "frontend_plugin"),HsPVar (HsIdent "_pkgs"),HsPVar (HsIdent "_deps")]) (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "loadFrontendPlugin"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsVar (UnQual (HsIdent "modname"))))),HsQualifier (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "frontend"))) (HsVar (UnQual (HsIdent "frontend_plugin")))) (HsParen (HsInfixApp (HsVar (UnQual (HsIdent "reverse"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "frontendPluginOpts"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "hsc_dflags"))) (HsVar (UnQual (HsIdent "hsc_env"))))))))) (HsVar (UnQual (HsIdent "srcs"))))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1074, srcColumn = 1}) [HsIdent "abiHash"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyApp (HsTyCon (UnQual (HsIdent "Ghc"))) (HsTyCon (Special HsUnitCon))))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1076, srcColumn = 1}) (HsIdent "abiHash") [HsPVar (HsIdent "strs")] (HsUnGuardedRhs (HsDo [HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1077, srcColumn = 11}) (HsPVar (HsIdent "hsc_env")) (HsVar (UnQual (HsIdent "getSession"))),HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1078, srcColumn = 7}) (HsPVar (HsIdent "dflags")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "hsc_dflags"))) (HsVar (UnQual (HsIdent "hsc_env"))))) []],HsQualifier (HsInfixApp (HsVar (UnQual (HsIdent "liftIO"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsDo [HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1082, srcColumn = 9}) (HsIdent "find_it") [HsPVar (HsIdent "str")] (HsUnGuardedRhs (HsDo [HsLetStmt [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1083, srcColumn = 16}) (HsPVar (HsIdent "modname")) (HsUnGuardedRhs (HsApp (HsVar (UnQual (HsIdent "mkModuleName"))) (HsVar (UnQual (HsIdent "str"))))) []],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1084, srcColumn = 14}) (HsPVar (HsIdent "r")) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "findImportedModule"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsVar (UnQual (HsIdent "modname")))) (HsCon (UnQual (HsIdent "NoPkgQual")))),HsQualifier (HsCase (HsVar (UnQual (HsIdent "r"))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 1086, srcColumn = 14}) (HsPApp (UnQual (HsIdent "Found")) [HsPWildCard,HsPVar (HsIdent "m")]) (HsUnGuardedAlt (HsApp (HsVar (UnQual (HsIdent "return"))) (HsVar (UnQual (HsIdent "m"))))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 1087, srcColumn = 14}) (HsPVar (HsIdent "_error")) (HsUnGuardedAlt (HsInfixApp (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "CmdLineError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsVar (UnQual (HsIdent "showSDoc"))) (HsVar (UnQual (HsIdent "dflags"))))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "cannotFindModule"))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsVar (UnQual (HsIdent "modname")))) (HsVar (UnQual (HsIdent "r")))))) []])])) []]],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1090, srcColumn = 10}) (HsPVar (HsIdent "mods")) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsVar (UnQual (HsIdent "find_it")))) (HsVar (UnQual (HsIdent "strs")))),HsLetStmt [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1092, srcColumn = 9}) (HsIdent "get_iface") [HsPVar (HsIdent "modl")] (HsUnGuardedRhs (HsApp (HsApp (HsApp (HsVar (UnQual (HsIdent "loadUserInterface"))) (HsCon (UnQual (HsIdent "NotBoot")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "abiHash"))))) (HsVar (UnQual (HsIdent "modl"))))) []]],HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1093, srcColumn = 12}) (HsPVar (HsIdent "ifaces")) (HsInfixApp (HsApp (HsApp (HsVar (UnQual (HsIdent "initIfaceCheck"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "text"))) (HsLit (HsString "abiHash"))))) (HsVar (UnQual (HsIdent "hsc_env")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM"))) (HsVar (UnQual (HsIdent "get_iface")))) (HsVar (UnQual (HsIdent "mods"))))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1095, srcColumn = 8}) (HsPVar (HsIdent "bh")) (HsApp (HsVar (UnQual (HsIdent "openBinMem"))) (HsParen (HsInfixApp (HsLit (HsInt 3)) (HsQVarOp (UnQual (HsSymbol "*"))) (HsLit (HsInt 1024))))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "put_"))) (HsVar (UnQual (HsIdent "bh")))) (HsVar (UnQual (HsIdent "hiVersion")))),HsQualifier (HsApp (HsApp (HsVar (UnQual (HsIdent "mapM_"))) (HsParen (HsInfixApp (HsInfixApp (HsApp (HsVar (UnQual (HsIdent "put_"))) (HsVar (UnQual (HsIdent "bh")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "mi_mod_hash")))) (HsQVarOp (UnQual (HsSymbol "."))) (HsVar (UnQual (HsIdent "mi_final_exts")))))) (HsVar (UnQual (HsIdent "ifaces")))),HsGenerator (SrcLoc {srcFilename = "<unknown>", srcLine = 1100, srcColumn = 7}) (HsPVar (HsIdent "f")) (HsApp (HsVar (UnQual (HsIdent "fingerprintBinMem"))) (HsVar (UnQual (HsIdent "bh")))),HsQualifier (HsApp (HsVar (UnQual (HsIdent "putStrLn"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "showPpr"))) (HsVar (UnQual (HsIdent "dflags")))) (HsVar (UnQual (HsIdent "f"))))))]))])) []],HsTypeSig (SrcLoc {srcFilename = "<unknown>", srcLine = 1107, srcColumn = 1}) [HsIdent "unknownFlagsErr"] (HsQualType [] (HsTyFun (HsTyApp (HsTyCon (Special HsListCon)) (HsTyCon (UnQual (HsIdent "String")))) (HsTyVar (HsIdent "a")))),HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1108, srcColumn = 1}) (HsIdent "unknownFlagsErr") [HsPVar (HsIdent "fs")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsVar (UnQual (HsIdent "throwGhcException"))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsCon (UnQual (HsIdent "UsageError")))) (HsQVarOp (UnQual (HsSymbol "$"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "concatMap"))) (HsVar (UnQual (HsIdent "oneError")))) (HsVar (UnQual (HsIdent "fs")))))) [HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1110, srcColumn = 5}) (HsIdent "oneError") [HsPVar (HsIdent "f")] (HsUnGuardedRhs (HsInfixApp (HsInfixApp (HsInfixApp (HsLit (HsString "unrecognised flag: ")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsVar (UnQual (HsIdent "f")))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsLit (HsString "\n"))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsParen (HsCase (HsApp (HsApp (HsVar (UnQual (HsIdent "match"))) (HsVar (UnQual (HsIdent "f")))) (HsParen (HsApp (HsVar (UnQual (HsIdent "nubSort"))) (HsVar (UnQual (HsIdent "allNonDeprecatedFlags")))))) [HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 1113, srcColumn = 13}) (HsPList []) (HsUnGuardedAlt (HsLit (HsString ""))) [],HsAlt (SrcLoc {srcFilename = "<unknown>", srcLine = 1114, srcColumn = 13}) (HsPVar (HsIdent "suggs")) (HsUnGuardedAlt (HsInfixApp (HsLit (HsString "did you mean one of:\n")) (HsQVarOp (UnQual (HsSymbol "++"))) (HsApp (HsVar (UnQual (HsIdent "unlines"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "map"))) (HsLeftSection (HsLit (HsString "  ")) (HsQVarOp (UnQual (HsSymbol "++"))))) (HsVar (UnQual (HsIdent "suggs")))))))) []])))) []],HsFunBind [HsMatch (SrcLoc {srcFilename = "<unknown>", srcLine = 1118, srcColumn = 5}) (HsIdent "match") [HsPVar (HsIdent "f"),HsPVar (HsIdent "allFlags")] (HsGuardedRhss [HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 1119, srcColumn = 9}) (HsApp (HsApp (HsVar (UnQual (HsIdent "elem"))) (HsLit (HsChar '='))) (HsVar (UnQual (HsIdent "f")))) (HsLet [HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1120, srcColumn = 19}) (HsPTuple [HsPVar (HsIdent "flagsWithEq"),HsPVar (HsIdent "flagsWithoutEq")]) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "partition"))) (HsParen (HsApp (HsVar (UnQual (HsIdent "elem"))) (HsLit (HsChar '='))))) (HsVar (UnQual (HsIdent "allFlags"))))) [],HsPatBind (SrcLoc {srcFilename = "<unknown>", srcLine = 1121, srcColumn = 19}) (HsPVar (HsIdent "fName")) (HsUnGuardedRhs (HsApp (HsApp (HsVar (UnQual (HsIdent "takeWhile"))) (HsRightSection (HsQVarOp (UnQual (HsSymbol "/="))) (HsLit (HsChar '=')))) (HsVar (UnQual (HsIdent "f"))))) []] (HsInfixApp (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "fuzzyMatch"))) (HsVar (UnQual (HsIdent "f")))) (HsVar (UnQual (HsIdent "flagsWithEq"))))) (HsQVarOp (UnQual (HsSymbol "++"))) (HsParen (HsApp (HsApp (HsVar (UnQual (HsIdent "fuzzyMatch"))) (HsVar (UnQual (HsIdent "fName")))) (HsVar (UnQual (HsIdent "flagsWithoutEq"))))))),HsGuardedRhs (SrcLoc {srcFilename = "<unknown>", srcLine = 1123, srcColumn = 9}) (HsVar (UnQual (HsIdent "otherwise"))) (HsApp (HsApp (HsVar (UnQual (HsIdent "fuzzyMatch"))) (HsVar (UnQual (HsIdent "f")))) (HsVar (UnQual (HsIdent "allFlags"))))]) []]]]]


